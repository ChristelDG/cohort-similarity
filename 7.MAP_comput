{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "3343105f-a6d9-43e7-97aa-ffbc2d41bf1c",
   "metadata": {},
   "source": [
    "# MAP computation from all patients within one phenotype \n",
    "A distance matrix of size (n_label, n_label) is computed between the index patient and all other patients. \n",
    "\n",
    "Distance computation for each label and cross label can be found in module distance.py\n",
    "\n",
    "Input : \n",
    "A pickle file containing a dataframe of patients with following informations: \n",
    "source (file/clinical note id), patient_id, terms, Fastext Embedding, BERT embedding, label. \n",
    "Eventually : patient index file, if not, this one would be selected from the dataset\n",
    "\n",
    "\n",
    "Output : Average Precision@3, Average Precision@10, recall, MAP\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "30ee3285-93d7-4caf-8d48-b42d74005b11",
   "metadata": {},
   "outputs": [],
   "source": [
    "from os.path import isfile, isdir, join\n",
    "import numpy as np\n",
    "import pandas as pd \n",
    "import pickle\n",
    "\n",
    "import time\n",
    "import sklearn\n",
    "from scipy.spatial.distance import cosine\n",
    "from sklearn.metrics import euclidean_distances\n",
    "from sklearn.feature_extraction.text import CountVectorizer\n",
    "\n",
    "\n",
    "# import local module of EMD computation along each label and between labels \n",
    "import distance \n",
    "\n",
    "# file_path='./out/02022022_train_val_local_annotated_accent_lower_FastText_BERT_mean2l_Emb.pkl'\n",
    "# file_CLASS_path = './results/Gold_classif_expe_pheno_patient_id.csv'\n",
    "\n",
    "\n",
    "file_path='./out/15_02_22_CRH_VAL_FastText_BERT.pkl'\n",
    "file_CLASS_path = './resources/Gold_CRH_VAL_PHENO_patientId.csv'\n",
    "\n",
    "\n",
    "Embedding = \"Fasttext\" # should be Fasttext of local_BERT or EDS_BERT\n",
    "assert Embedding in ('Fasttext', 'local_BERT', 'EDS_BERT')\n",
    "\n",
    "beta = 0.5\n",
    "\n",
    "assert(isfile(file_path))\n",
    "assert(isfile(file_CLASS_path))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7820c5f1-4fbb-43f6-b49f-3b4f786dfe1f",
   "metadata": {},
   "source": [
    "#### First load the dataframes : \n",
    "`df_init` corresponds to the global dataframe with all patients source, gender, extracted terms and their corresponding label(s) and Fasttext and Bert embeddings.\n",
    "`pheno_df` stores the gold standard annotation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "aa9db305-04c2-4ec3-8453-b9d7721537f1",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_init = pd.read_pickle(file_path)\n",
    "\n",
    "# in a first experiment, delete all \"etatsosy rows\"\n",
    "df = df_init.copy()\n",
    "df.drop(df.loc[df.label == 'etatsosy'].index, inplace=True)\n",
    "# df.sample(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "d25b38bb-7ceb-4597-9f7b-fae3692e4e04",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Look for all patients with label a certain gold label :\n",
    "pheno_df = pd.read_csv(file_CLASS_path)\n",
    "# pheno_df.sample(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "c97c4dc6-7275-41c0-a06c-3c3798661d3f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "For the gold pheno label PINS_Sclerodermie number of patients is 20\n"
     ]
    }
   ],
   "source": [
    "pheno_label =  \"PINS_Sclerodermie\" \n",
    "assert pheno_label in (\"osteoporose\", \"nephro_lupus\",\"ES_traitement\", \"PINS_Sclerodermie\", \n",
    "                       \"pneumopathie_infectieuse\", \"SAPL_Obstetrical\"  )\n",
    "\n",
    "if pheno_label == 'osteoporose':\n",
    "    axe_1 = 'osteomusculaires'\n",
    "    axe_2 = 'nutritionnelles'\n",
    "\n",
    "if pheno_label == 'nephro_lupus':\n",
    "    axe_1 = 'urogen'\n",
    "    axe_2 = 'immunitaire'    \n",
    "    \n",
    "if pheno_label == 'PINS_Sclerodermie':\n",
    "    axe_1 = 'respiratoire'\n",
    "    axe_2 = 'immunitaire' \n",
    "    \n",
    "if pheno_label == 'pneumopathie_infectieuse':\n",
    "    axe_1 = 'respiratoire'\n",
    "    axe_2 = 'infections' \n",
    "    \n",
    "# get the list of all patients with this particular phenotype\n",
    "pheno_df = pheno_df.replace('NEW', 'n', regex = True)\n",
    "pheno_patients = set(pheno_df[pheno_df['label'] == pheno_label].source.tolist())\n",
    "\n",
    "\n",
    "print('For the gold pheno label', pheno_label, 'number of patients is', len(pheno_patients))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "d7bc1482-608d-457a-b6a2-d0efebcb9dfc",
   "metadata": {},
   "outputs": [],
   "source": [
    "# load patients allready seen : \n",
    "average_10_file = open(f\"./results_dist_matrices/{pheno_label}_dict_average_precision_10.pkl\", \"rb\")\n",
    "average_precision_10 = pickle.load(average_10_file)\n",
    "average_10_file.close()\n",
    "\n",
    "\n",
    "average_3_file = open(f\"./results_dist_matrices/{pheno_label}_dict_average_precision_3.pkl\", \"rb\")\n",
    "average_precision_3 = pickle.load(average_3_file)\n",
    "average_3_file.close() "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "6f3254b9-ec2e-4079-9164-c0c8c4dbe750",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(0.85, 0.6499999999999999)"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(average_precision_10)\n",
    "AP_3 = [v for k,v in average_precision_3.items()]\n",
    "AP_10 = [v for k,v in average_precision_10.items()]\n",
    "np.mean(AP_3), np.mean(AP_10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "b4eba32d-a77f-4320-9d68-d482cb11be9c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "20"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(average_precision_3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "93739e6a-3e42-41ec-b94b-dc1d1fe385d6",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Fonction for distance matrix computation : \n",
    "def compute_dist_matrix(file_index, files, labels, df, Embedding): \n",
    "    \"\"\"\n",
    "    Compute the distance matrix on each label (labels) of the patient (file_index) with all other patients (files)\n",
    "    sharing at least one label.\n",
    "    Inputs :\n",
    "    ------\n",
    "    file_index : patient of interest of which we want to get similar patients from files\n",
    "    files : list of other patients id\n",
    "    labels : shared labels by patient of interest and others\n",
    "    df : dataframe containing all terms/embeddings/label for each patient\n",
    "    Embedding : which embedding model retained : Fasttext, local_BERT, EDS_BERT \n",
    "    \n",
    "    Outputs :\n",
    "    dist_matrix and corresponding indexes : patient_to_id and label_to_id\n",
    "    \"\"\"\n",
    "    \n",
    "    # Initialization : \n",
    "    patient_to_id = {}\n",
    "    label_to_id = {}\n",
    "    dist_matrix = np.zeros([len(files), len(labels), len(labels)])\n",
    "    dist_dict= {}\n",
    "    \n",
    "    i = 0 \n",
    "    for file in sorted(set(files)):\n",
    "        j = 0\n",
    "        for lab_1 in sorted(labels): \n",
    "            k = 0\n",
    "            for lab_2 in sorted(labels): \n",
    "                if (file,lab_1,lab_2) not in dist_dict.keys():\n",
    "                    if lab_1 == lab_2:\n",
    "                        dist_matrix[i,j,j] = distance.distance_files_by_lab(df, file_index, file, \n",
    "                                                                                Embedding,lab_1, \n",
    "                                                                                Distance_type = 'cosine', \n",
    "                                                                                verbose = False)\n",
    "                        patient_to_id[file] = i\n",
    "                        label_to_id[lab_1] = j\n",
    "                        dist_dict[(file, lab_1, lab_2)] = dist_matrix[i,j,j]\n",
    "\n",
    "                        assert(j == k)\n",
    "                    else : \n",
    "                        dist_matrix[i,j,k] = distance.distance_files_cross_lab(df, file_index, file, \n",
    "                                                                                            Embedding,lab_1,lab_2,\n",
    "                                                                                            Distance_type = 'cosine', \n",
    "                                                                                            verbose = False)\n",
    "                        dist_dict[(file, lab_1, lab_2)] = dist_matrix[i,j,k]\n",
    "                k += 1\n",
    "            j += 1                    \n",
    "        i += 1\n",
    "        if i%100 == 0:\n",
    "            print(file_index, 'i', i)\n",
    "        \n",
    "    return dist_matrix, patient_to_id, label_to_id"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "086f3c9e-f0c8-4bf1-8c9f-337ac4302c01",
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Actual patient is  CRH_val_sample_152 with 5 labels\n",
      "CRH_val_sample_152.ann i 100\n",
      "CRH_val_sample_152.ann i 200\n",
      "Time  51.64096117019653\n",
      "Correponding shapes of the two matrices : distance matrix = (253, 5, 5) and weights = (253, 5, 5)\n",
      "close_patient  29 is  CRH_val_sample_141.ann\n",
      "true positive for index 29 is  CRH_val_sample_141.ann\n",
      "close_patient  20 is  CRH_val_sample_124.ann\n",
      "true positive for index 20 is  CRH_val_sample_124.ann\n",
      "close_patient  5 is  CRH_val_sample_102.ann\n",
      "true positive for index 5 is  CRH_val_sample_102.ann\n",
      "ap 3 for patient CRH_val_sample_152   100.0 %\n",
      "\n",
      "close_patient  29 is  CRH_val_sample_141.ann\n",
      "true positive for index 29 is  CRH_val_sample_141.ann\n",
      "close_patient  20 is  CRH_val_sample_124.ann\n",
      "true positive for index 20 is  CRH_val_sample_124.ann\n",
      "close_patient  5 is  CRH_val_sample_102.ann\n",
      "true positive for index 5 is  CRH_val_sample_102.ann\n",
      "close_patient  54 is  CRH_val_sample_191.ann\n",
      "true positive for index 54 is  CRH_val_sample_191.ann\n",
      "close_patient  43 is  CRH_val_sample_178.ann\n",
      "close_patient  55 is  CRH_val_sample_193.ann\n",
      "true positive for index 55 is  CRH_val_sample_193.ann\n",
      "close_patient  18 is  CRH_val_sample_122.ann\n",
      "true positive for index 18 is  CRH_val_sample_122.ann\n",
      "close_patient  33 is  CRH_val_sample_148.ann\n",
      "true positive for index 33 is  CRH_val_sample_148.ann\n",
      "close_patient  46 is  CRH_val_sample_181.ann\n",
      "close_patient  19 is  CRH_val_sample_123.ann\n",
      "ap 10 for patient CRH_val_sample_152   70.0 %\n",
      "\n",
      "\n",
      "Actual patient is  n_CRH_val_sample_79 with 11 labels\n",
      "n_CRH_val_sample_79.ann i 100\n",
      "n_CRH_val_sample_79.ann i 200\n",
      "Time  219.9025595188141\n",
      "Correponding shapes of the two matrices : distance matrix = (254, 11, 11) and weights = (254, 11, 11)\n",
      "close_patient  29 is  CRH_val_sample_141.ann\n",
      "true positive for index 29 is  CRH_val_sample_141.ann\n",
      "close_patient  21 is  CRH_val_sample_127.ann\n",
      "close_patient  47 is  CRH_val_sample_181.ann\n",
      "ap 3 for patient n_CRH_val_sample_79   33.33333333333333 %\n",
      "\n",
      "close_patient  29 is  CRH_val_sample_141.ann\n",
      "true positive for index 29 is  CRH_val_sample_141.ann\n",
      "close_patient  21 is  CRH_val_sample_127.ann\n",
      "close_patient  47 is  CRH_val_sample_181.ann\n",
      "close_patient  18 is  CRH_val_sample_122.ann\n",
      "true positive for index 18 is  CRH_val_sample_122.ann\n",
      "close_patient  251 is  n_CRH_val_sample_92.ann\n",
      "true positive for index 251 is  n_CRH_val_sample_92.ann\n",
      "close_patient  56 is  CRH_val_sample_193.ann\n",
      "true positive for index 56 is  CRH_val_sample_193.ann\n",
      "close_patient  22 is  CRH_val_sample_128.ann\n",
      "close_patient  5 is  CRH_val_sample_102.ann\n",
      "true positive for index 5 is  CRH_val_sample_102.ann\n",
      "close_patient  30 is  CRH_val_sample_142.ann\n",
      "close_patient  10 is  CRH_val_sample_111.ann\n",
      "ap 10 for patient n_CRH_val_sample_79   50.0 %\n",
      "\n",
      "\n",
      "Actual patient is  CRH_val_sample_176 with 17 labels\n",
      "CRH_val_sample_176.ann i 100\n",
      "CRH_val_sample_176.ann i 200\n",
      "Time  497.8610301017761\n",
      "Correponding shapes of the two matrices : distance matrix = (254, 17, 17) and weights = (254, 17, 17)\n",
      "close_patient  29 is  CRH_val_sample_141.ann\n",
      "true positive for index 29 is  CRH_val_sample_141.ann\n",
      "close_patient  55 is  CRH_val_sample_193.ann\n",
      "true positive for index 55 is  CRH_val_sample_193.ann\n",
      "close_patient  245 is  n_CRH_val_sample_85.ann\n",
      "true positive for index 245 is  n_CRH_val_sample_85.ann\n",
      "ap 3 for patient CRH_val_sample_176   100.0 %\n",
      "\n",
      "close_patient  29 is  CRH_val_sample_141.ann\n",
      "true positive for index 29 is  CRH_val_sample_141.ann\n",
      "close_patient  55 is  CRH_val_sample_193.ann\n",
      "true positive for index 55 is  CRH_val_sample_193.ann\n",
      "close_patient  245 is  n_CRH_val_sample_85.ann\n",
      "true positive for index 245 is  n_CRH_val_sample_85.ann\n",
      "close_patient  248 is  n_CRH_val_sample_89.ann\n",
      "true positive for index 248 is  n_CRH_val_sample_89.ann\n",
      "close_patient  5 is  CRH_val_sample_102.ann\n",
      "true positive for index 5 is  CRH_val_sample_102.ann\n",
      "close_patient  54 is  CRH_val_sample_191.ann\n",
      "true positive for index 54 is  CRH_val_sample_191.ann\n",
      "close_patient  238 is  n_CRH_val_sample_73.ann\n",
      "true positive for index 238 is  n_CRH_val_sample_73.ann\n",
      "close_patient  237 is  n_CRH_val_sample_72.ann\n",
      "true positive for index 237 is  n_CRH_val_sample_72.ann\n",
      "close_patient  18 is  CRH_val_sample_122.ann\n",
      "true positive for index 18 is  CRH_val_sample_122.ann\n",
      "close_patient  251 is  n_CRH_val_sample_92.ann\n",
      "true positive for index 251 is  n_CRH_val_sample_92.ann\n",
      "ap 10 for patient CRH_val_sample_176   100.0 %\n",
      "\n",
      "\n",
      "Actual patient is  n_CRH_val_sample_92 with 8 labels\n",
      "n_CRH_val_sample_92.ann i 100\n",
      "n_CRH_val_sample_92.ann i 200\n",
      "Time  136.09465336799622\n",
      "Correponding shapes of the two matrices : distance matrix = (253, 8, 8) and weights = (253, 8, 8)\n",
      "close_patient  29 is  CRH_val_sample_141.ann\n",
      "true positive for index 29 is  CRH_val_sample_141.ann\n",
      "close_patient  238 is  n_CRH_val_sample_73.ann\n",
      "true positive for index 238 is  n_CRH_val_sample_73.ann\n",
      "close_patient  56 is  CRH_val_sample_193.ann\n",
      "true positive for index 56 is  CRH_val_sample_193.ann\n",
      "ap 3 for patient n_CRH_val_sample_92   100.0 %\n",
      "\n",
      "close_patient  29 is  CRH_val_sample_141.ann\n",
      "true positive for index 29 is  CRH_val_sample_141.ann\n",
      "close_patient  238 is  n_CRH_val_sample_73.ann\n",
      "true positive for index 238 is  n_CRH_val_sample_73.ann\n",
      "close_patient  56 is  CRH_val_sample_193.ann\n",
      "true positive for index 56 is  CRH_val_sample_193.ann\n",
      "close_patient  18 is  CRH_val_sample_122.ann\n",
      "true positive for index 18 is  CRH_val_sample_122.ann\n",
      "close_patient  243 is  n_CRH_val_sample_79.ann\n",
      "true positive for index 243 is  n_CRH_val_sample_79.ann\n",
      "close_patient  55 is  CRH_val_sample_191.ann\n",
      "true positive for index 55 is  CRH_val_sample_191.ann\n",
      "close_patient  245 is  n_CRH_val_sample_85.ann\n",
      "true positive for index 245 is  n_CRH_val_sample_85.ann\n",
      "close_patient  248 is  n_CRH_val_sample_89.ann\n",
      "true positive for index 248 is  n_CRH_val_sample_89.ann\n",
      "close_patient  22 is  CRH_val_sample_128.ann\n",
      "close_patient  43 is  CRH_val_sample_176.ann\n",
      "true positive for index 43 is  CRH_val_sample_176.ann\n",
      "ap 10 for patient n_CRH_val_sample_92   90.0 %\n",
      "\n",
      "\n",
      "Actual patient is  CRH_val_sample_148 with 9 labels\n",
      "CRH_val_sample_148.ann i 100\n",
      "CRH_val_sample_148.ann i 200\n",
      "Time  147.45653748512268\n",
      "Correponding shapes of the two matrices : distance matrix = (254, 9, 9) and weights = (254, 9, 9)\n",
      "close_patient  54 is  CRH_val_sample_191.ann\n",
      "true positive for index 54 is  CRH_val_sample_191.ann\n",
      "close_patient  29 is  CRH_val_sample_141.ann\n",
      "true positive for index 29 is  CRH_val_sample_141.ann\n",
      "close_patient  238 is  n_CRH_val_sample_73.ann\n",
      "true positive for index 238 is  n_CRH_val_sample_73.ann\n",
      "ap 3 for patient CRH_val_sample_148   100.0 %\n",
      "\n",
      "close_patient  54 is  CRH_val_sample_191.ann\n",
      "true positive for index 54 is  CRH_val_sample_191.ann\n",
      "close_patient  29 is  CRH_val_sample_141.ann\n",
      "true positive for index 29 is  CRH_val_sample_141.ann\n",
      "close_patient  238 is  n_CRH_val_sample_73.ann\n",
      "true positive for index 238 is  n_CRH_val_sample_73.ann\n",
      "close_patient  21 is  CRH_val_sample_127.ann\n",
      "close_patient  55 is  CRH_val_sample_193.ann\n",
      "true positive for index 55 is  CRH_val_sample_193.ann\n",
      "close_patient  18 is  CRH_val_sample_122.ann\n",
      "true positive for index 18 is  CRH_val_sample_122.ann\n",
      "close_patient  10 is  CRH_val_sample_111.ann\n",
      "close_patient  253 is  n_CRH_val_sample_99.ann\n",
      "close_patient  46 is  CRH_val_sample_181.ann\n",
      "close_patient  245 is  n_CRH_val_sample_85.ann\n",
      "true positive for index 245 is  n_CRH_val_sample_85.ann\n",
      "ap 10 for patient CRH_val_sample_148   60.0 %\n",
      "\n",
      "\n",
      "Actual patient is  n_CRH_val_sample_87 with 12 labels\n",
      "n_CRH_val_sample_87.ann i 100\n",
      "n_CRH_val_sample_87.ann i 200\n",
      "Time  230.9038164615631\n",
      "Correponding shapes of the two matrices : distance matrix = (254, 12, 12) and weights = (254, 12, 12)\n",
      "close_patient  29 is  CRH_val_sample_141.ann\n",
      "true positive for index 29 is  CRH_val_sample_141.ann\n",
      "close_patient  55 is  CRH_val_sample_191.ann\n",
      "true positive for index 55 is  CRH_val_sample_191.ann\n",
      "close_patient  5 is  CRH_val_sample_102.ann\n",
      "true positive for index 5 is  CRH_val_sample_102.ann\n",
      "ap 3 for patient n_CRH_val_sample_87   100.0 %\n",
      "\n",
      "close_patient  29 is  CRH_val_sample_141.ann\n",
      "true positive for index 29 is  CRH_val_sample_141.ann\n",
      "close_patient  55 is  CRH_val_sample_191.ann\n",
      "true positive for index 55 is  CRH_val_sample_191.ann\n",
      "close_patient  5 is  CRH_val_sample_102.ann\n",
      "true positive for index 5 is  CRH_val_sample_102.ann\n",
      "close_patient  154 is  CRH_val_sample_48.ann\n",
      "close_patient  56 is  CRH_val_sample_193.ann\n",
      "true positive for index 56 is  CRH_val_sample_193.ann\n",
      "close_patient  239 is  n_CRH_val_sample_73.ann\n",
      "true positive for index 239 is  n_CRH_val_sample_73.ann\n",
      "close_patient  109 is  CRH_val_sample_330.ann\n",
      "close_patient  22 is  CRH_val_sample_128.ann\n",
      "close_patient  192 is  n_CRH_val_sample_1.ann\n",
      "close_patient  41 is  CRH_val_sample_174.ann\n",
      "true positive for index 41 is  CRH_val_sample_174.ann\n",
      "ap 10 for patient n_CRH_val_sample_87   60.0 %\n",
      "\n",
      "\n",
      "Actual patient is  CRH_val_sample_119 with 14 labels\n",
      "CRH_val_sample_119.ann i 100\n",
      "CRH_val_sample_119.ann i 200\n",
      "Time  364.1044912338257\n",
      "Correponding shapes of the two matrices : distance matrix = (254, 14, 14) and weights = (254, 14, 14)\n",
      "close_patient  38 is  CRH_val_sample_169.ann\n",
      "close_patient  28 is  CRH_val_sample_141.ann\n",
      "true positive for index 28 is  CRH_val_sample_141.ann\n",
      "close_patient  188 is  CRH_val_sample_98.ann\n",
      "ap 3 for patient CRH_val_sample_119   33.33333333333333 %\n",
      "\n",
      "close_patient  38 is  CRH_val_sample_169.ann\n",
      "close_patient  28 is  CRH_val_sample_141.ann\n",
      "true positive for index 28 is  CRH_val_sample_141.ann\n",
      "close_patient  188 is  CRH_val_sample_98.ann\n",
      "close_patient  7 is  CRH_val_sample_106.ann\n",
      "close_patient  191 is  n_CRH_val_sample_1.ann\n",
      "close_patient  55 is  CRH_val_sample_193.ann\n",
      "true positive for index 55 is  CRH_val_sample_193.ann\n",
      "close_patient  20 is  CRH_val_sample_127.ann\n",
      "close_patient  21 is  CRH_val_sample_128.ann\n",
      "close_patient  40 is  CRH_val_sample_174.ann\n",
      "true positive for index 40 is  CRH_val_sample_174.ann\n",
      "close_patient  47 is  CRH_val_sample_182.ann\n",
      "ap 10 for patient CRH_val_sample_119   30.0 %\n",
      "\n",
      "\n",
      "Actual patient is  CRH_val_sample_124 with 10 labels\n",
      "CRH_val_sample_124.ann i 100\n",
      "CRH_val_sample_124.ann i 200\n",
      "Time  195.2599494457245\n",
      "Correponding shapes of the two matrices : distance matrix = (254, 10, 10) and weights = (254, 10, 10)\n",
      "close_patient  28 is  CRH_val_sample_141.ann\n",
      "true positive for index 28 is  CRH_val_sample_141.ann\n",
      "close_patient  5 is  CRH_val_sample_102.ann\n",
      "true positive for index 5 is  CRH_val_sample_102.ann\n",
      "close_patient  35 is  CRH_val_sample_152.ann\n",
      "true positive for index 35 is  CRH_val_sample_152.ann\n",
      "ap 3 for patient CRH_val_sample_124   100.0 %\n",
      "\n",
      "close_patient  28 is  CRH_val_sample_141.ann\n",
      "true positive for index 28 is  CRH_val_sample_141.ann\n",
      "close_patient  5 is  CRH_val_sample_102.ann\n",
      "true positive for index 5 is  CRH_val_sample_102.ann\n",
      "close_patient  35 is  CRH_val_sample_152.ann\n",
      "true positive for index 35 is  CRH_val_sample_152.ann\n",
      "close_patient  20 is  CRH_val_sample_127.ann\n",
      "close_patient  54 is  CRH_val_sample_191.ann\n",
      "true positive for index 54 is  CRH_val_sample_191.ann\n",
      "close_patient  55 is  CRH_val_sample_193.ann\n",
      "true positive for index 55 is  CRH_val_sample_193.ann\n",
      "close_patient  238 is  n_CRH_val_sample_73.ann\n",
      "true positive for index 238 is  n_CRH_val_sample_73.ann\n",
      "close_patient  19 is  CRH_val_sample_123.ann\n",
      "close_patient  18 is  CRH_val_sample_122.ann\n",
      "true positive for index 18 is  CRH_val_sample_122.ann\n",
      "close_patient  3 is  CRH_val_sample_100.ann\n",
      "true positive for index 3 is  CRH_val_sample_100.ann\n",
      "ap 10 for patient CRH_val_sample_124   80.0 %\n",
      "\n",
      "\n",
      "Actual patient is  CRH_val_sample_100 with 12 labels\n",
      "CRH_val_sample_100.ann i 100\n",
      "CRH_val_sample_100.ann i 200\n",
      "Time  258.769700050354\n",
      "Correponding shapes of the two matrices : distance matrix = (254, 12, 12) and weights = (254, 12, 12)\n",
      "close_patient  28 is  CRH_val_sample_141.ann\n",
      "true positive for index 28 is  CRH_val_sample_141.ann\n",
      "close_patient  54 is  CRH_val_sample_191.ann\n",
      "true positive for index 54 is  CRH_val_sample_191.ann\n",
      "close_patient  55 is  CRH_val_sample_193.ann\n",
      "true positive for index 55 is  CRH_val_sample_193.ann\n",
      "ap 3 for patient CRH_val_sample_100   100.0 %\n",
      "\n",
      "close_patient  28 is  CRH_val_sample_141.ann\n",
      "true positive for index 28 is  CRH_val_sample_141.ann\n",
      "close_patient  54 is  CRH_val_sample_191.ann\n",
      "true positive for index 54 is  CRH_val_sample_191.ann\n",
      "close_patient  55 is  CRH_val_sample_193.ann\n",
      "true positive for index 55 is  CRH_val_sample_193.ann\n",
      "close_patient  20 is  CRH_val_sample_127.ann\n",
      "close_patient  248 is  n_CRH_val_sample_89.ann\n",
      "true positive for index 248 is  n_CRH_val_sample_89.ann\n",
      "close_patient  46 is  CRH_val_sample_181.ann\n",
      "close_patient  238 is  n_CRH_val_sample_73.ann\n",
      "true positive for index 238 is  n_CRH_val_sample_73.ann\n",
      "close_patient  21 is  CRH_val_sample_128.ann\n",
      "close_patient  191 is  n_CRH_val_sample_1.ann\n",
      "close_patient  153 is  CRH_val_sample_48.ann\n",
      "ap 10 for patient CRH_val_sample_100   50.0 %\n",
      "\n",
      "\n",
      "Actual patient is  CRH_val_sample_174 with 19 labels\n",
      "CRH_val_sample_174.ann i 100\n",
      "CRH_val_sample_174.ann i 200\n",
      "Time  620.0802631378174\n",
      "Correponding shapes of the two matrices : distance matrix = (254, 19, 19) and weights = (254, 19, 19)\n",
      "close_patient  55 is  CRH_val_sample_193.ann\n",
      "true positive for index 55 is  CRH_val_sample_193.ann\n",
      "close_patient  29 is  CRH_val_sample_141.ann\n",
      "true positive for index 29 is  CRH_val_sample_141.ann\n",
      "close_patient  248 is  n_CRH_val_sample_89.ann\n",
      "true positive for index 248 is  n_CRH_val_sample_89.ann\n",
      "ap 3 for patient CRH_val_sample_174   100.0 %\n",
      "\n",
      "close_patient  55 is  CRH_val_sample_193.ann\n",
      "true positive for index 55 is  CRH_val_sample_193.ann\n",
      "close_patient  29 is  CRH_val_sample_141.ann\n",
      "true positive for index 29 is  CRH_val_sample_141.ann\n",
      "close_patient  248 is  n_CRH_val_sample_89.ann\n",
      "true positive for index 248 is  n_CRH_val_sample_89.ann\n",
      "close_patient  21 is  CRH_val_sample_127.ann\n",
      "close_patient  22 is  CRH_val_sample_128.ann\n",
      "close_patient  54 is  CRH_val_sample_191.ann\n",
      "true positive for index 54 is  CRH_val_sample_191.ann\n",
      "close_patient  44 is  CRH_val_sample_179.ann\n",
      "close_patient  5 is  CRH_val_sample_102.ann\n",
      "true positive for index 5 is  CRH_val_sample_102.ann\n",
      "close_patient  10 is  CRH_val_sample_111.ann\n",
      "close_patient  237 is  n_CRH_val_sample_72.ann\n",
      "true positive for index 237 is  n_CRH_val_sample_72.ann\n",
      "ap 10 for patient CRH_val_sample_174   60.0 %\n",
      "\n",
      "\n",
      "Actual patient is  n_CRH_val_sample_85 with 11 labels\n",
      "n_CRH_val_sample_85.ann i 100\n",
      "n_CRH_val_sample_85.ann i 200\n",
      "Time  206.9434163570404\n",
      "Correponding shapes of the two matrices : distance matrix = (253, 11, 11) and weights = (253, 11, 11)\n",
      "close_patient  56 is  CRH_val_sample_193.ann\n",
      "true positive for index 56 is  CRH_val_sample_193.ann\n",
      "close_patient  44 is  CRH_val_sample_178.ann\n",
      "close_patient  237 is  n_CRH_val_sample_72.ann\n",
      "true positive for index 237 is  n_CRH_val_sample_72.ann\n",
      "ap 3 for patient n_CRH_val_sample_85   66.66666666666666 %\n",
      "\n",
      "close_patient  56 is  CRH_val_sample_193.ann\n",
      "true positive for index 56 is  CRH_val_sample_193.ann\n",
      "close_patient  44 is  CRH_val_sample_178.ann\n",
      "close_patient  237 is  n_CRH_val_sample_72.ann\n",
      "true positive for index 237 is  n_CRH_val_sample_72.ann\n",
      "close_patient  18 is  CRH_val_sample_122.ann\n",
      "true positive for index 18 is  CRH_val_sample_122.ann\n",
      "close_patient  5 is  CRH_val_sample_102.ann\n",
      "true positive for index 5 is  CRH_val_sample_102.ann\n",
      "close_patient  247 is  n_CRH_val_sample_89.ann\n",
      "true positive for index 247 is  n_CRH_val_sample_89.ann\n",
      "close_patient  29 is  CRH_val_sample_141.ann\n",
      "true positive for index 29 is  CRH_val_sample_141.ann\n",
      "close_patient  242 is  n_CRH_val_sample_78.ann\n",
      "close_patient  249 is  n_CRH_val_sample_90.ann\n",
      "close_patient  12 is  CRH_val_sample_115.ann\n",
      "ap 10 for patient n_CRH_val_sample_85   60.0 %\n",
      "\n",
      "\n",
      "Actual patient is  CRH_val_sample_141 with 9 labels\n",
      "CRH_val_sample_141.ann i 100\n",
      "CRH_val_sample_141.ann i 200\n",
      "Time  181.4785737991333\n",
      "Correponding shapes of the two matrices : distance matrix = (254, 9, 9) and weights = (254, 9, 9)\n",
      "close_patient  21 is  CRH_val_sample_127.ann\n",
      "close_patient  243 is  n_CRH_val_sample_79.ann\n",
      "true positive for index 243 is  n_CRH_val_sample_79.ann\n",
      "close_patient  238 is  n_CRH_val_sample_73.ann\n",
      "true positive for index 238 is  n_CRH_val_sample_73.ann\n",
      "ap 3 for patient CRH_val_sample_141   66.66666666666666 %\n",
      "\n",
      "close_patient  21 is  CRH_val_sample_127.ann\n",
      "close_patient  243 is  n_CRH_val_sample_79.ann\n",
      "true positive for index 243 is  n_CRH_val_sample_79.ann\n",
      "close_patient  238 is  n_CRH_val_sample_73.ann\n",
      "true positive for index 238 is  n_CRH_val_sample_73.ann\n",
      "close_patient  5 is  CRH_val_sample_102.ann\n",
      "true positive for index 5 is  CRH_val_sample_102.ann\n",
      "close_patient  55 is  CRH_val_sample_193.ann\n",
      "true positive for index 55 is  CRH_val_sample_193.ann\n",
      "close_patient  29 is  CRH_val_sample_142.ann\n",
      "close_patient  10 is  CRH_val_sample_111.ann\n",
      "close_patient  239 is  n_CRH_val_sample_74.ann\n",
      "close_patient  3 is  CRH_val_sample_100.ann\n",
      "true positive for index 3 is  CRH_val_sample_100.ann\n",
      "close_patient  22 is  CRH_val_sample_128.ann\n",
      "ap 10 for patient CRH_val_sample_141   50.0 %\n",
      "\n",
      "\n",
      "Actual patient is  CRH_val_sample_102 with 14 labels\n",
      "CRH_val_sample_102.ann i 100\n",
      "CRH_val_sample_102.ann i 200\n",
      "Time  349.99474811553955\n",
      "Correponding shapes of the two matrices : distance matrix = (254, 14, 14) and weights = (254, 14, 14)\n",
      "close_patient  28 is  CRH_val_sample_141.ann\n",
      "true positive for index 28 is  CRH_val_sample_141.ann\n",
      "close_patient  237 is  n_CRH_val_sample_72.ann\n",
      "true positive for index 237 is  n_CRH_val_sample_72.ann\n",
      "close_patient  55 is  CRH_val_sample_193.ann\n",
      "true positive for index 55 is  CRH_val_sample_193.ann\n",
      "ap 3 for patient CRH_val_sample_102   100.0 %\n",
      "\n",
      "close_patient  28 is  CRH_val_sample_141.ann\n",
      "true positive for index 28 is  CRH_val_sample_141.ann\n",
      "close_patient  237 is  n_CRH_val_sample_72.ann\n",
      "true positive for index 237 is  n_CRH_val_sample_72.ann\n",
      "close_patient  55 is  CRH_val_sample_193.ann\n",
      "true positive for index 55 is  CRH_val_sample_193.ann\n",
      "close_patient  244 is  n_CRH_val_sample_84.ann\n",
      "true positive for index 244 is  n_CRH_val_sample_84.ann\n",
      "close_patient  248 is  n_CRH_val_sample_89.ann\n",
      "true positive for index 248 is  n_CRH_val_sample_89.ann\n",
      "close_patient  20 is  CRH_val_sample_127.ann\n",
      "close_patient  43 is  CRH_val_sample_178.ann\n",
      "close_patient  54 is  CRH_val_sample_191.ann\n",
      "true positive for index 54 is  CRH_val_sample_191.ann\n",
      "close_patient  9 is  CRH_val_sample_111.ann\n",
      "close_patient  50 is  CRH_val_sample_187.ann\n",
      "ap 10 for patient CRH_val_sample_102   60.0 %\n",
      "\n",
      "\n",
      "Actual patient is  CRH_val_sample_191 with 15 labels\n",
      "CRH_val_sample_191.ann i 100\n",
      "CRH_val_sample_191.ann i 200\n",
      "Time  427.4507837295532\n",
      "Correponding shapes of the two matrices : distance matrix = (254, 15, 15) and weights = (254, 15, 15)\n",
      "close_patient  29 is  CRH_val_sample_141.ann\n",
      "true positive for index 29 is  CRH_val_sample_141.ann\n",
      "close_patient  237 is  n_CRH_val_sample_72.ann\n",
      "true positive for index 237 is  n_CRH_val_sample_72.ann\n",
      "close_patient  238 is  n_CRH_val_sample_73.ann\n",
      "true positive for index 238 is  n_CRH_val_sample_73.ann\n",
      "ap 3 for patient CRH_val_sample_191   100.0 %\n",
      "\n",
      "close_patient  29 is  CRH_val_sample_141.ann\n",
      "true positive for index 29 is  CRH_val_sample_141.ann\n",
      "close_patient  237 is  n_CRH_val_sample_72.ann\n",
      "true positive for index 237 is  n_CRH_val_sample_72.ann\n",
      "close_patient  238 is  n_CRH_val_sample_73.ann\n",
      "true positive for index 238 is  n_CRH_val_sample_73.ann\n",
      "close_patient  55 is  CRH_val_sample_193.ann\n",
      "true positive for index 55 is  CRH_val_sample_193.ann\n",
      "close_patient  33 is  CRH_val_sample_148.ann\n",
      "true positive for index 33 is  CRH_val_sample_148.ann\n",
      "close_patient  5 is  CRH_val_sample_102.ann\n",
      "true positive for index 5 is  CRH_val_sample_102.ann\n",
      "close_patient  244 is  n_CRH_val_sample_84.ann\n",
      "true positive for index 244 is  n_CRH_val_sample_84.ann\n",
      "close_patient  250 is  n_CRH_val_sample_90.ann\n",
      "close_patient  21 is  CRH_val_sample_127.ann\n",
      "close_patient  10 is  CRH_val_sample_111.ann\n",
      "ap 10 for patient CRH_val_sample_191   70.0 %\n",
      "\n",
      "\n",
      "Actual patient is  n_CRH_val_sample_84 with 8 labels\n",
      "n_CRH_val_sample_84.ann i 100\n"
     ]
    }
   ],
   "source": [
    "# Main \n",
    "# intialize average precision dictionnary\n",
    "average_precision_3 = dict()\n",
    "average_precision_10 = dict()\n",
    "\n",
    "\n",
    "for file_index in pheno_patients:\n",
    "    patient_source = file_index[:-4]\n",
    "    \n",
    "    # load the patient's labels :\n",
    "    labels = set(df[df['source']== file_index].label.tolist())\n",
    "    n_lab = len(labels)\n",
    "    print('\\nActual patient is ', patient_source,'with', n_lab, 'labels')\n",
    "\n",
    "    # reduce the dataframe to patients with at least one sharing label with paient source :\n",
    "    df_r = df[df['label'].isin(labels)]\n",
    "\n",
    "    # load the files \n",
    "    files = list(set(df_r['source']))\n",
    "    files.remove(file_index)\n",
    "    # print(\"number of files\", len(files))\n",
    "    \n",
    "    # Compute distance matrix with all other patients\n",
    "    start = time.time()\n",
    "    dist_matrix, patient_to_id, label_to_id = compute_dist_matrix(file_index, files, labels, df, Embedding)\n",
    "    end = time.time()\n",
    "    print('Time ', end-start)\n",
    "    \n",
    "    # patients do not all share all labels, hence dist_matrix presents a certain number of nan values,\n",
    "    # convert them to maximum distance (hence 1, since dist_matrix is normalized)\n",
    "    dist_matrix = np.nan_to_num(dist_matrix, copy=True, nan=1, posinf=None, neginf=None)\n",
    "    \n",
    "    # save distance matrix directly and tow dicts patient_to_id and label_to_id for patient source\n",
    "    np.save(f'./results_dist_matrices/{pheno_label}_distance_matrix_{patient_source}.npy', dist_matrix )\n",
    "\n",
    "    a_file = open(f\"./results_dist_matrices/{pheno_label}_patient_to_id_{patient_source}.pkl\", \"wb\")\n",
    "    pickle.dump(patient_to_id, a_file)\n",
    "    a_file.close()\n",
    "\n",
    "    b_file = open(f\"./results_dist_matrices/{pheno_label}_label_to_id_{patient_source}.pkl\", \"wb\")\n",
    "    pickle.dump(label_to_id, b_file)\n",
    "    b_file.close()\n",
    "    \n",
    "    # Now to get most similar patients, compute weight matrix \n",
    "    # get the resepcted indexes of axes of interest (defined above according to pheno_label chosen) : \n",
    "    idx_1 = label_to_id[axe_1]\n",
    "    idx_2 = label_to_id[axe_2]\n",
    "\n",
    "    # build the weight matrix : \n",
    "    weights = np.zeros([n_lab, n_lab]) # \n",
    "    weights[idx_1, idx_1] = weights[idx_2, idx_2] = 1\n",
    "    weights[idx_1, idx_2] = weights[idx_2, idx_1] = beta\n",
    "\n",
    "    # repeat the weights matrix for all patients : \n",
    "    weights_all = np.repeat(weights[np.newaxis, :,:], len(files), axis = 0)\n",
    "    # in order to compare patients, get the similarity matrix rather than the distance : \n",
    "    sym_matrix = 1-dist_matrix\n",
    "    # Now multiply the 2 3D matrices in order to get a distance from our patient to all patient on those 2 axes : \n",
    "    print('Correponding shapes of the two matrices : distance matrix =', sym_matrix.shape,\n",
    "          'and weights =', weights_all.shape)\n",
    "    # Element wise computation \n",
    "    result = np.multiply(sym_matrix, weights_all)\n",
    "    reduce_result = np.sum(result, axis = 2)\n",
    "    reduce_result_2 = np.sum(reduce_result, axis = 1)\n",
    "    final_result = reduce_result_2/np.sum(weights)\n",
    "    final_result = 1 - final_result\n",
    "    \n",
    "    # average precision computation for the 3 closest patients and 10 closest patients \n",
    "    true_labels = pheno_patients\n",
    "    id_to_patient = {v: k for k, v in patient_to_id.items()}\n",
    "    \n",
    "    # get the ordered indexes\n",
    "    idx = np.argsort(final_result)\n",
    "    \n",
    "    count_3 = 0\n",
    "    for index in idx[:3]:\n",
    "        print('close_patient ', index, 'is ', id_to_patient[index])\n",
    "        if id_to_patient[index] in true_labels:\n",
    "            print('true positive for index',index,'is ', id_to_patient[index])\n",
    "            count_3 += 1\n",
    "    average_precision_3[patient_source] = count_3/3\n",
    "    print('ap 3 for patient', patient_source,' ',count_3/3*100, \"%\\n\")\n",
    "    \n",
    "    count_10 = 0\n",
    "    for index in idx[:10]:\n",
    "        print('close_patient ', index, 'is ', id_to_patient[index])\n",
    "        if id_to_patient[index] in true_labels:\n",
    "            print('true positive for index', index,'is ', id_to_patient[index])\n",
    "            count_10 += 1\n",
    "    average_precision_10[patient_source] = count_10/10\n",
    "    print('ap 10 for patient', patient_source,' ',count_10/10*100, \"%\\n\")\n",
    "    \n",
    "    average_3_file = open(f\"./results_dist_matrices/{pheno_label}_dict_average_precision_3.pkl\", \"wb\")\n",
    "    pickle.dump(average_precision_3, average_3_file)\n",
    "    average_3_file.close() \n",
    "    \n",
    "    average_10_file = open(f\"./results_dist_matrices/{pheno_label}_dict_average_precision_10.pkl\", \"wb\")\n",
    "    pickle.dump(average_precision_10, average_10_file)\n",
    "    average_10_file.close() \n",
    "\n",
    "print(\"DONE ! for pheno_label\", pheno_label)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "d722fa3e-1098-4817-bc30-1ea7eaf7fb6d",
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "-----y_true, y_pred computation for phenotype  PINS_Sclerodermie  and patient  CRH_val_sample_152\n",
      "shape of distance_matrix  (253, 5, 5) for patient  CRH_val_sample_152\n",
      "Correponding shapes of the two matrices : distance matrix = (253, 5, 5) and weights = (253, 5, 5)\n",
      "MAP for patient CRH_val_sample_152   57.60558270983373 %\n",
      "\n",
      "-----y_true, y_pred computation for phenotype  PINS_Sclerodermie  and patient  n_CRH_val_sample_79\n",
      "shape of distance_matrix  (254, 11, 11) for patient  n_CRH_val_sample_79\n",
      "Correponding shapes of the two matrices : distance matrix = (254, 11, 11) and weights = (254, 11, 11)\n",
      "MAP for patient n_CRH_val_sample_79   49.99034953938805 %\n",
      "\n",
      "-----y_true, y_pred computation for phenotype  PINS_Sclerodermie  and patient  CRH_val_sample_176\n",
      "shape of distance_matrix  (254, 17, 17) for patient  CRH_val_sample_176\n",
      "Correponding shapes of the two matrices : distance matrix = (254, 17, 17) and weights = (254, 17, 17)\n",
      "MAP for patient CRH_val_sample_176   71.15737839602842 %\n",
      "\n",
      "-----y_true, y_pred computation for phenotype  PINS_Sclerodermie  and patient  n_CRH_val_sample_92\n",
      "shape of distance_matrix  (253, 8, 8) for patient  n_CRH_val_sample_92\n",
      "Correponding shapes of the two matrices : distance matrix = (253, 8, 8) and weights = (253, 8, 8)\n",
      "MAP for patient n_CRH_val_sample_92   68.35511173317883 %\n",
      "\n",
      "-----y_true, y_pred computation for phenotype  PINS_Sclerodermie  and patient  CRH_val_sample_148\n",
      "shape of distance_matrix  (254, 9, 9) for patient  CRH_val_sample_148\n",
      "Correponding shapes of the two matrices : distance matrix = (254, 9, 9) and weights = (254, 9, 9)\n",
      "MAP for patient CRH_val_sample_148   64.50627952568787 %\n",
      "\n",
      "-----y_true, y_pred computation for phenotype  PINS_Sclerodermie  and patient  n_CRH_val_sample_87\n",
      "shape of distance_matrix  (254, 12, 12) for patient  n_CRH_val_sample_87\n",
      "Correponding shapes of the two matrices : distance matrix = (254, 12, 12) and weights = (254, 12, 12)\n",
      "MAP for patient n_CRH_val_sample_87   53.762877882121465 %\n",
      "\n",
      "-----y_true, y_pred computation for phenotype  PINS_Sclerodermie  and patient  CRH_val_sample_119\n",
      "shape of distance_matrix  (254, 14, 14) for patient  CRH_val_sample_119\n",
      "Correponding shapes of the two matrices : distance matrix = (254, 14, 14) and weights = (254, 14, 14)\n",
      "MAP for patient CRH_val_sample_119   29.6014625259577 %\n",
      "\n",
      "-----y_true, y_pred computation for phenotype  PINS_Sclerodermie  and patient  CRH_val_sample_124\n",
      "shape of distance_matrix  (254, 10, 10) for patient  CRH_val_sample_124\n",
      "Correponding shapes of the two matrices : distance matrix = (254, 10, 10) and weights = (254, 10, 10)\n",
      "MAP for patient CRH_val_sample_124   63.67978014012496 %\n",
      "\n",
      "-----y_true, y_pred computation for phenotype  PINS_Sclerodermie  and patient  CRH_val_sample_100\n",
      "shape of distance_matrix  (254, 12, 12) for patient  CRH_val_sample_100\n",
      "Correponding shapes of the two matrices : distance matrix = (254, 12, 12) and weights = (254, 12, 12)\n",
      "MAP for patient CRH_val_sample_100   53.90481726381117 %\n",
      "\n",
      "-----y_true, y_pred computation for phenotype  PINS_Sclerodermie  and patient  CRH_val_sample_174\n",
      "shape of distance_matrix  (254, 19, 19) for patient  CRH_val_sample_174\n",
      "Correponding shapes of the two matrices : distance matrix = (254, 19, 19) and weights = (254, 19, 19)\n",
      "MAP for patient CRH_val_sample_174   53.496874717019274 %\n",
      "\n",
      "-----y_true, y_pred computation for phenotype  PINS_Sclerodermie  and patient  n_CRH_val_sample_85\n",
      "shape of distance_matrix  (253, 11, 11) for patient  n_CRH_val_sample_85\n",
      "Correponding shapes of the two matrices : distance matrix = (253, 11, 11) and weights = (253, 11, 11)\n",
      "MAP for patient n_CRH_val_sample_85   54.666864962548566 %\n",
      "\n",
      "-----y_true, y_pred computation for phenotype  PINS_Sclerodermie  and patient  CRH_val_sample_141\n",
      "shape of distance_matrix  (254, 9, 9) for patient  CRH_val_sample_141\n",
      "Correponding shapes of the two matrices : distance matrix = (254, 9, 9) and weights = (254, 9, 9)\n",
      "MAP for patient CRH_val_sample_141   55.185354229104234 %\n",
      "\n",
      "-----y_true, y_pred computation for phenotype  PINS_Sclerodermie  and patient  CRH_val_sample_102\n",
      "shape of distance_matrix  (254, 14, 14) for patient  CRH_val_sample_102\n",
      "Correponding shapes of the two matrices : distance matrix = (254, 14, 14) and weights = (254, 14, 14)\n",
      "MAP for patient CRH_val_sample_102   65.03160798949118 %\n",
      "\n",
      "-----y_true, y_pred computation for phenotype  PINS_Sclerodermie  and patient  CRH_val_sample_191\n",
      "shape of distance_matrix  (254, 15, 15) for patient  CRH_val_sample_191\n",
      "Correponding shapes of the two matrices : distance matrix = (254, 15, 15) and weights = (254, 15, 15)\n",
      "MAP for patient CRH_val_sample_191   70.57077500955911 %\n",
      "\n",
      "-----y_true, y_pred computation for phenotype  PINS_Sclerodermie  and patient  n_CRH_val_sample_84\n",
      "shape of distance_matrix  (253, 8, 8) for patient  n_CRH_val_sample_84\n",
      "Correponding shapes of the two matrices : distance matrix = (253, 8, 8) and weights = (253, 8, 8)\n",
      "MAP for patient n_CRH_val_sample_84   46.58795109209556 %\n",
      "\n",
      "-----y_true, y_pred computation for phenotype  PINS_Sclerodermie  and patient  n_CRH_val_sample_72\n",
      "shape of distance_matrix  (253, 9, 9) for patient  n_CRH_val_sample_72\n",
      "Correponding shapes of the two matrices : distance matrix = (253, 9, 9) and weights = (253, 9, 9)\n",
      "MAP for patient n_CRH_val_sample_72   67.33449715970401 %\n",
      "\n",
      "-----y_true, y_pred computation for phenotype  PINS_Sclerodermie  and patient  CRH_val_sample_122\n",
      "shape of distance_matrix  (254, 9, 9) for patient  CRH_val_sample_122\n",
      "Correponding shapes of the two matrices : distance matrix = (254, 9, 9) and weights = (254, 9, 9)\n",
      "MAP for patient CRH_val_sample_122   58.65776176446514 %\n",
      "\n",
      "-----y_true, y_pred computation for phenotype  PINS_Sclerodermie  and patient  CRH_val_sample_193\n",
      "shape of distance_matrix  (253, 12, 12) for patient  CRH_val_sample_193\n",
      "Correponding shapes of the two matrices : distance matrix = (253, 12, 12) and weights = (253, 12, 12)\n",
      "MAP for patient CRH_val_sample_193   59.908111583081 %\n",
      "\n",
      "-----y_true, y_pred computation for phenotype  PINS_Sclerodermie  and patient  n_CRH_val_sample_73\n",
      "shape of distance_matrix  (253, 9, 9) for patient  n_CRH_val_sample_73\n",
      "Correponding shapes of the two matrices : distance matrix = (253, 9, 9) and weights = (253, 9, 9)\n",
      "MAP for patient n_CRH_val_sample_73   62.05923623870184 %\n",
      "\n",
      "-----y_true, y_pred computation for phenotype  PINS_Sclerodermie  and patient  n_CRH_val_sample_89\n",
      "shape of distance_matrix  (254, 13, 13) for patient  n_CRH_val_sample_89\n",
      "Correponding shapes of the two matrices : distance matrix = (254, 13, 13) and weights = (254, 13, 13)\n",
      "MAP for patient n_CRH_val_sample_89   56.335566421426876 %\n",
      "\n",
      "DONE ! for pheno_label PINS_Sclerodermie\n",
      "sanoty checks, len(y_true) 20 len(y_pred) 20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/export/home/cse200093/.local/lib/python3.7/site-packages/numpy/core/_asarray.py:136: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray\n",
      "  return array(a, dtype, copy=False, order=order, subok=True)\n"
     ]
    }
   ],
   "source": [
    "beta = 0.5\n",
    "\n",
    "# Compute y_pred and y_true for all patients for actual phenotype. \n",
    "y_true = [] # ordered as patient_to_id 1 if the patient is in pheno_patients, else 0 \n",
    "y_pred = [] # similarity scores \n",
    "\n",
    "mean_average_precision = dict()\n",
    "\n",
    "# number of similar patients to find\n",
    "k = len(average_precision_3)\n",
    "\n",
    "for patient_source in average_precision_3.keys():\n",
    "    \n",
    "    print('-----y_true, y_pred computation for phenotype ', pheno_label,' and patient ', patient_source)\n",
    "    \n",
    "    DIST_PATH = f'./results_dist_matrices/{pheno_label}_distance_matrix_{patient_source}.npy'\n",
    "    patient_id_path = f\"./results_dist_matrices/{pheno_label}_patient_to_id_{patient_source}.pkl\"\n",
    "    label_id_path = f\"./results_dist_matrices/{pheno_label}_label_to_id_{patient_source}.pkl\"\n",
    "    \n",
    "    dist_matrix = np.load(DIST_PATH)\n",
    "\n",
    "    p_file = open(patient_id_path, \"rb\")\n",
    "    patient_to_id = pickle.load(p_file)\n",
    "    p_file.close()\n",
    "    \n",
    "    l_file = open(label_id_path, \"rb\")\n",
    "    label_to_id = pickle.load(l_file)\n",
    "    l_file.close()\n",
    "\n",
    "    print('shape of distance_matrix ', dist_matrix.shape, 'for patient ', patient_source)\n",
    "\n",
    "    # Now to get most similar patients, compute weight matrix \n",
    "    # get the resepcted indexes of axes of interest (defined above according to pheno_label chosen) : \n",
    "    idx_1 = label_to_id[axe_1]\n",
    "    idx_2 = label_to_id[axe_2]\n",
    "\n",
    "    # build the weight matrix : \n",
    "    weights = np.zeros([dist_matrix.shape[1], dist_matrix.shape[1]]) # \n",
    "    weights[idx_1, idx_1] = weights[idx_2, idx_2] = 1\n",
    "    weights[idx_1, idx_2] = weights[idx_2, idx_1] = beta\n",
    "\n",
    "    # repeat the weights matrix for all patients : \n",
    "    weights_all = np.repeat(weights[np.newaxis, :,:], len(patient_to_id), axis = 0)\n",
    "    # in order to compare patients, get the similarity matrix rather than the distance : \n",
    "    sym_matrix = 1-dist_matrix\n",
    "    # Now multiply the 2 3D matrices in order to get a distance from our patient to all patient on those 2 axes : \n",
    "    print('Correponding shapes of the two matrices : distance matrix =', sym_matrix.shape,\n",
    "          'and weights =', weights_all.shape)\n",
    "    # Element wise computation \n",
    "    result = np.multiply(sym_matrix, weights_all)\n",
    "    reduce_result = np.sum(result, axis = 2)\n",
    "    reduce_result_2 = np.sum(reduce_result, axis = 1)\n",
    "    final_result = reduce_result_2/np.sum(weights)\n",
    "    \n",
    "    y_pred.append(final_result) \n",
    "    \n",
    "    final_result = 1 - final_result\n",
    "\n",
    "    # average precision computation\n",
    "    true_labels = pheno_patients\n",
    "    y_true_patient = [1 if k in true_labels else 0 for k in patient_to_id.keys()]\n",
    "    y_true.append(y_true_patient)\n",
    "    \n",
    "    id_to_patient = {v: k for k, v in patient_to_id.items()}\n",
    "\n",
    "    # get the ordered indexes\n",
    "    idx = np.argsort(final_result)\n",
    "\n",
    "    n = len(patient_to_id)\n",
    "    \n",
    "    precision = np.zeros([n,1])\n",
    "    rel = np.zeros([n,1])\n",
    "    \n",
    "    # k correspond to the number of similar patients\n",
    "    # for the k first patients : \n",
    "    for i in range(1,n):\n",
    "        # check if patient rank i is in deed similar: \n",
    "        index_i = idx[:i][-1]\n",
    "        if id_to_patient[index_i] in true_labels:\n",
    "            rel[i] = 1\n",
    "            \n",
    "        # compute precision at rank i     \n",
    "        count = 0 \n",
    "        for index in idx[:i]:\n",
    "            if id_to_patient[index] in true_labels:\n",
    "                count += 1\n",
    "        precision[i] = count/i\n",
    "    \n",
    "    mean_average_precision[patient_source] =  np.sum(np.multiply(precision, rel))/k\n",
    "    \n",
    "    print('MAP for patient', patient_source,' ',mean_average_precision[patient_source]*100, \"%\\n\")\n",
    "\n",
    " \n",
    "    mean_average_precision_file = open(f\"./results_dist_matrices/{pheno_label}_dict_map.pkl\", \"wb\")\n",
    "    pickle.dump(mean_average_precision, mean_average_precision_file)\n",
    "    mean_average_precision_file.close() \n",
    "\n",
    "\n",
    "# save y_true, y_pred for this phenotype\n",
    "np.save(f'./results_dist_matrices/{pheno_label}_y_pred.npy', y_pred)\n",
    "np.save(f'./results_dist_matrices/{pheno_label}_y_true.npy', y_true)\n",
    "print(\"DONE ! for pheno_label\", pheno_label)\n",
    "print(\"sanoty checks, len(y_true)\", len(y_true), 'len(y_pred)', len(y_pred))\n",
    "MAP = [v for k,v in mean_average_precision.items()]\n",
    "MAP_tot = np.sum(MAP)/k\n",
    "\n",
    "print(\"MAP_tot result\", MAP_tot)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "d4235de7-aaca-418d-b279-99f68909e41a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MAP_tot result 0.5811991204416646\n"
     ]
    }
   ],
   "source": [
    "MAP = [v for k,v in mean_average_precision.items()]\n",
    "MAP_tot = np.sum(MAP)/k\n",
    "\n",
    "print(\"MAP_tot result\", MAP_tot)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "f099e3f9-0f00-4dd8-a3d7-f57deaddd118",
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[array([0.07727587, 0.07621833, 0.24816968, 0.18719201, 0.27629145,\n",
       "        0.41427089, 0.24941326, 0.25183545, 0.12378194, 0.30540219,\n",
       "        0.32708462, 0.23019451, 0.25162384, 0.13599386, 0.30368595,\n",
       "        0.0861446 , 0.18714654, 0.10231666, 0.37043466, 0.36608178,\n",
       "        0.4194567 , 0.36220596, 0.32935315, 0.16583376, 0.23730316,\n",
       "        0.16798028, 0.30581006, 0.09124533, 0.08704043, 0.45052641,\n",
       "        0.31279671, 0.09035535, 0.10268145, 0.36824566, 0.11628488,\n",
       "        0.30223055, 0.23843796, 0.12741067, 0.29041207, 0.19629516,\n",
       "        0.31358907, 0.25906959, 0.28793056, 0.3902984 , 0.24682405,\n",
       "        0.11253297, 0.36688313, 0.33509914, 0.25769206, 0.03511847,\n",
       "        0.26279306, 0.31742264, 0.17234613, 0.2269329 , 0.40078446,\n",
       "        0.3751115 , 0.27147407, 0.00097244, 0.        , 0.10319167,\n",
       "        0.11274308, 0.        , 0.        , 0.04542173, 0.29265088,\n",
       "        0.05070762, 0.20320475, 0.06421625, 0.0936319 , 0.        ,\n",
       "        0.16096131, 0.05951342, 0.        , 0.06241394, 0.        ,\n",
       "        0.        , 0.        , 0.17138197, 0.        , 0.08085309,\n",
       "        0.        , 0.09545957, 0.        , 0.        , 0.05030473,\n",
       "        0.05070762, 0.22148303, 0.10376552, 0.08753637, 0.        ,\n",
       "        0.13505941, 0.08546098, 0.06925538, 0.28328555, 0.13939302,\n",
       "        0.18905999, 0.        , 0.13164738, 0.19655898, 0.07983875,\n",
       "        0.12904178, 0.07773429, 0.18166249, 0.181345  , 0.21311179,\n",
       "        0.18310673, 0.06200216, 0.1325491 , 0.33738689, 0.0887351 ,\n",
       "        0.16646937, 0.04356842, 0.20824774, 0.07025186, 0.16865737,\n",
       "        0.12411637, 0.3121117 , 0.06424502, 0.20009943, 0.16973509,\n",
       "        0.12393135, 0.06630193, 0.12163833, 0.13416652, 0.26484081,\n",
       "        0.15136862, 0.06618904, 0.1716558 , 0.18671676, 0.15744302,\n",
       "        0.26638283, 0.30263583, 0.044251  , 0.27452631, 0.17564296,\n",
       "        0.07480459, 0.22967139, 0.21914292, 0.13836192, 0.2538662 ,\n",
       "        0.26548681, 0.14077625, 0.16725494, 0.19338149, 0.20934537,\n",
       "        0.13229533, 0.16993479, 0.17458566, 0.1976812 , 0.06016047,\n",
       "        0.00922423, 0.07219625, 0.33197442, 0.25061908, 0.27838958,\n",
       "        0.1526651 , 0.06546527, 0.24977515, 0.21254353, 0.24063469,\n",
       "        0.09037997, 0.0303632 , 0.25666921, 0.06986899, 0.26813242,\n",
       "        0.21962185, 0.09418254, 0.24902607, 0.19967982, 0.12758113,\n",
       "        0.09184669, 0.22736504, 0.10877929, 0.09697226, 0.30808073,\n",
       "        0.09406008, 0.13002945, 0.27737851, 0.24495343, 0.20436846,\n",
       "        0.        , 0.1261576 , 0.21903564, 0.07298556, 0.13214928,\n",
       "        0.2464298 , 0.11103443, 0.33282811, 0.31609347, 0.        ,\n",
       "        0.32299123, 0.27704101, 0.12259273, 0.19405519, 0.03595783,\n",
       "        0.        , 0.2523047 , 0.08963773, 0.26776264, 0.20178274,\n",
       "        0.1572014 , 0.00475644, 0.25623724, 0.0866187 , 0.23595628,\n",
       "        0.11485834, 0.06619909, 0.23570821, 0.03944617, 0.09509915,\n",
       "        0.13370859, 0.16675421, 0.04369047, 0.03461392, 0.04659007,\n",
       "        0.12105935, 0.09845262, 0.2504126 , 0.07052999, 0.12838869,\n",
       "        0.33024443, 0.10221258, 0.02279387, 0.06611445, 0.20214737,\n",
       "        0.17022848, 0.10033013, 0.22127666, 0.27115041, 0.24843702,\n",
       "        0.2023847 , 0.17483552, 0.08555148, 0.06723539, 0.08107286,\n",
       "        0.2035556 , 0.30025093, 0.363509  , 0.23110397, 0.26599246,\n",
       "        0.13064187, 0.28967709, 0.21744257, 0.3214901 , 0.30956324,\n",
       "        0.2742458 , 0.19434525, 0.35158066, 0.20405833, 0.28131296,\n",
       "        0.32122292, 0.11336139, 0.31543909]),\n",
       " array([0.06941715, 0.06850867, 0.30433895, 0.29992534, 0.28908266,\n",
       "        0.42937487, 0.31588104, 0.39612999, 0.12003421, 0.36270502,\n",
       "        0.42501655, 0.25333897, 0.31083285, 0.14889371, 0.42084237,\n",
       "        0.08724307, 0.27143184, 0.11994374, 0.46282887, 0.32293173,\n",
       "        0.32921523, 0.48307316, 0.42980744, 0.24875425, 0.33132457,\n",
       "        0.13750957, 0.34143902, 0.07424933, 0.08693117, 0.5400077 ,\n",
       "        0.42767989, 0.14339394, 0.1474404 , 0.36945192, 0.11182226,\n",
       "        0.3428073 , 0.21744257, 0.30786181, 0.144069  , 0.38649639,\n",
       "        0.16591301, 0.40560258, 0.3374225 , 0.36592866, 0.36303742,\n",
       "        0.31248197, 0.1068597 , 0.4782301 , 0.3807276 , 0.34655392,\n",
       "        0.11938815, 0.3807861 , 0.36773921, 0.24756761, 0.29572408,\n",
       "        0.40619038, 0.45029073, 0.33860394, 0.004596  , 0.        ,\n",
       "        0.13495608, 0.1958601 , 0.        , 0.        , 0.04015807,\n",
       "        0.29563143, 0.08124698, 0.25931559, 0.14740275, 0.09971877,\n",
       "        0.        , 0.26093765, 0.07107672, 0.        , 0.0861727 ,\n",
       "        0.        , 0.        , 0.        , 0.2319735 , 0.        ,\n",
       "        0.13226415, 0.        , 0.10858174, 0.        , 0.        ,\n",
       "        0.12632979, 0.08124698, 0.27038776, 0.13374743, 0.1578885 ,\n",
       "        0.        , 0.19688236, 0.09043178, 0.1279085 , 0.36883431,\n",
       "        0.16859689, 0.20427168, 0.        , 0.15935203, 0.26659686,\n",
       "        0.12605278, 0.18755365, 0.08429725, 0.29174254, 0.26871319,\n",
       "        0.30675992, 0.22038044, 0.06488416, 0.13103587, 0.38767406,\n",
       "        0.14096801, 0.26224356, 0.057246  , 0.29734953, 0.12572187,\n",
       "        0.2496905 , 0.21019991, 0.27426211, 0.07472137, 0.2495726 ,\n",
       "        0.24866175, 0.17193476, 0.0719176 , 0.21906908, 0.193338  ,\n",
       "        0.3245561 , 0.23419616, 0.10560088, 0.26232343, 0.30601933,\n",
       "        0.18526289, 0.33504605, 0.3414975 , 0.        , 0.04077016,\n",
       "        0.33380308, 0.25027829, 0.10920821, 0.30823933, 0.24743466,\n",
       "        0.18523103, 0.35115607, 0.30658775, 0.1894517 , 0.24208066,\n",
       "        0.26912748, 0.31223734, 0.1670464 , 0.20106032, 0.2284657 ,\n",
       "        0.25787213, 0.05882183, 0.005076  , 0.06506167, 0.38311017,\n",
       "        0.33424863, 0.33345542, 0.20395535, 0.0637838 , 0.32215143,\n",
       "        0.28538109, 0.36024883, 0.090415  , 0.0305118 , 0.31936662,\n",
       "        0.13342177, 0.31152275, 0.27675664, 0.09825865, 0.35302118,\n",
       "        0.29255424, 0.13380593, 0.09068069, 0.30278271, 0.20700919,\n",
       "        0.09951593, 0.32733162, 0.11091658, 0.12355463, 0.34797422,\n",
       "        0.32194147, 0.30783974, 0.        , 0.12460819, 0.2842723 ,\n",
       "        0.0848401 , 0.12951458, 0.32613791, 0.11405043, 0.41663674,\n",
       "        0.31977256, 0.        , 0.39331376, 0.32441028, 0.12146783,\n",
       "        0.24934617, 0.01877233, 0.        , 0.36132127, 0.08931407,\n",
       "        0.27579079, 0.2874512 , 0.22226882, 0.01653898, 0.32102739,\n",
       "        0.08687353, 0.34032446, 0.11405889, 0.09745211, 0.2980017 ,\n",
       "        0.035987  , 0.11743922, 0.19864983, 0.23475489, 0.04630175,\n",
       "        0.06661793, 0.06143507, 0.19038776, 0.10114949, 0.34635671,\n",
       "        0.09208621, 0.12838021, 0.28934721, 0.110578  , 0.02396586,\n",
       "        0.06450101, 0.25640931, 0.26405839, 0.10475123, 0.31360839,\n",
       "        0.33675071, 0.30357888, 0.27224118, 0.22991009, 0.08544343,\n",
       "        0.07924082, 0.15962018, 0.34908194, 0.4011571 , 0.40678841,\n",
       "        0.34443854, 0.30117581, 0.13994098, 0.35163605, 0.40316196,\n",
       "        0.39778066, 0.35088011, 0.25114993, 0.41468802, 0.23825551,\n",
       "        0.3825091 , 0.45354942, 0.15449035, 0.38961979]),\n",
       " array([0.07502884, 0.08418875, 0.23860801, 0.3169715 , 0.28752046,\n",
       "        0.42632607, 0.35998656, 0.3458714 , 0.1733647 , 0.3937226 ,\n",
       "        0.36293117, 0.21284511, 0.34223486, 0.23740198, 0.33640458,\n",
       "        0.08955013, 0.25708157, 0.06097023, 0.41596894, 0.3075046 ,\n",
       "        0.34030673, 0.3611113 , 0.40957214, 0.25766181, 0.35777013,\n",
       "        0.21545831, 0.34266428, 0.0859998 , 0.18110134, 0.45798493,\n",
       "        0.34360465, 0.1655412 , 0.09701317, 0.32233011, 0.11661961,\n",
       "        0.27432308, 0.28793056, 0.25045113, 0.17640518, 0.37245749,\n",
       "        0.18168045, 0.40309458, 0.29725116, 0.37602648, 0.32004922,\n",
       "        0.12171924, 0.34864201, 0.36691758, 0.25537806, 0.04401392,\n",
       "        0.32189999, 0.34274836, 0.20405151, 0.29105067, 0.42537674,\n",
       "        0.43282041, 0.31642956, 0.05554037, 0.        , 0.06255855,\n",
       "        0.20375222, 0.03245298, 0.        , 0.1123358 , 0.33789798,\n",
       "        0.02960492, 0.2121097 , 0.08845592, 0.12463209, 0.        ,\n",
       "        0.2676366 , 0.10449183, 0.        , 0.039806  , 0.        ,\n",
       "        0.        , 0.04908728, 0.24661486, 0.        , 0.06812946,\n",
       "        0.        , 0.05022705, 0.        , 0.        , 0.07514434,\n",
       "        0.02960492, 0.27556364, 0.07574386, 0.0626639 , 0.        ,\n",
       "        0.22095601, 0.12361799, 0.06191242, 0.30848421, 0.12799134,\n",
       "        0.17659212, 0.03734706, 0.16872185, 0.19629575, 0.18091367,\n",
       "        0.1487052 , 0.09433971, 0.21321757, 0.21133248, 0.26926114,\n",
       "        0.18091641, 0.09064635, 0.13161448, 0.34133768, 0.11555069,\n",
       "        0.17138151, 0.10568185, 0.2474336 , 0.07363699, 0.20390483,\n",
       "        0.13202672, 0.2615505 , 0.10161057, 0.24153095, 0.20388001,\n",
       "        0.21466817, 0.08933902, 0.25594279, 0.25223964, 0.30630233,\n",
       "        0.21532055, 0.06873132, 0.20026688, 0.23113168, 0.17075433,\n",
       "        0.35710054, 0.30852652, 0.        , 0.06443411, 0.2711671 ,\n",
       "        0.25942356, 0.06774758, 0.26148068, 0.27312722, 0.16826438,\n",
       "        0.27940377, 0.29923224, 0.16045468, 0.19349939, 0.26790834,\n",
       "        0.25544125, 0.15197752, 0.18789956, 0.22275378, 0.18914956,\n",
       "        0.12345732, 0.05795886, 0.10297023, 0.33144515, 0.21454554,\n",
       "        0.29727392, 0.20479725, 0.06902964, 0.23031788, 0.26359267,\n",
       "        0.29000231, 0.10782306, 0.05724806, 0.32182953, 0.08227122,\n",
       "        0.2978519 , 0.23931715, 0.16486717, 0.29385722, 0.26859259,\n",
       "        0.12765202, 0.10524796, 0.31381941, 0.16059717, 0.07146325,\n",
       "        0.31364227, 0.11776608, 0.12150756, 0.3094862 , 0.24628107,\n",
       "        0.29641571, 0.04562872, 0.11729927, 0.30163675, 0.13291451,\n",
       "        0.13347449, 0.37211844, 0.11960847, 0.34594   , 0.3130008 ,\n",
       "        0.03930813, 0.37613319, 0.27569397, 0.109271  , 0.21850652,\n",
       "        0.07785977, 0.05344046, 0.26311577, 0.1011827 , 0.25661253,\n",
       "        0.30992481, 0.17094134, 0.07239602, 0.26747959, 0.10320652,\n",
       "        0.26226151, 0.14128804, 0.08309378, 0.25570053, 0.09253864,\n",
       "        0.12209269, 0.16951301, 0.20489811, 0.07397285, 0.09396519,\n",
       "        0.08722299, 0.17428621, 0.10672612, 0.28384783, 0.08647174,\n",
       "        0.13175666, 0.25546792, 0.12312306, 0.06594683, 0.0895155 ,\n",
       "        0.21751793, 0.21640319, 0.10889627, 0.25332233, 0.30358722,\n",
       "        0.27471074, 0.24397007, 0.21118046, 0.12037502, 0.1492657 ,\n",
       "        0.16377038, 0.32389841, 0.41995747, 0.42086229, 0.26103821,\n",
       "        0.28770455, 0.14098112, 0.37070242, 0.36592866, 0.37033804,\n",
       "        0.42827444, 0.2730402 , 0.30176789, 0.42758227, 0.20416327,\n",
       "        0.37704259, 0.41457642, 0.19738715, 0.33265205]),\n",
       " array([0.08489125, 0.10460991, 0.31879198, 0.33338224, 0.30891014,\n",
       "        0.41160158, 0.34911556, 0.3606527 , 0.15861706, 0.36255138,\n",
       "        0.41202014, 0.25480323, 0.34642992, 0.20767748, 0.37910267,\n",
       "        0.0955003 , 0.24815002, 0.08004488, 0.45867008, 0.35616236,\n",
       "        0.35435625, 0.41375166, 0.41702308, 0.2682506 , 0.40149195,\n",
       "        0.25720375, 0.31481338, 0.08741242, 0.13827096, 0.49412961,\n",
       "        0.39774694, 0.17862411, 0.13800827, 0.31993928, 0.12598066,\n",
       "        0.29048022, 0.32122292, 0.30380422, 0.1836847 , 0.35905551,\n",
       "        0.17518562, 0.40250439, 0.33379166, 0.41457642, 0.39901456,\n",
       "        0.32990946, 0.13141019, 0.3720902 , 0.40662019, 0.33156377,\n",
       "        0.08310117, 0.38096589, 0.35581819, 0.23472784, 0.33394446,\n",
       "        0.43273965, 0.46503462, 0.34343832, 0.06503956, 0.        ,\n",
       "        0.10735382, 0.2107996 , 0.05374183, 0.        , 0.10212393,\n",
       "        0.32370002, 0.0248434 , 0.26348606, 0.14646014, 0.13729878,\n",
       "        0.        , 0.26922305, 0.11196215, 0.        , 0.03546113,\n",
       "        0.        , 0.        , 0.05475081, 0.24571469, 0.        ,\n",
       "        0.09293315, 0.        , 0.0553921 , 0.        , 0.        ,\n",
       "        0.10675346, 0.0248434 , 0.38263224, 0.09918193, 0.09180431,\n",
       "        0.        , 0.1805665 , 0.12983412, 0.0721099 , 0.35329943,\n",
       "        0.14723035, 0.19008653, 0.04193208, 0.27885888, 0.24468681,\n",
       "        0.16579743, 0.18842171, 0.10776159, 0.28323851, 0.24199614,\n",
       "        0.33616491, 0.20108218, 0.09946155, 0.14886534, 0.37966265,\n",
       "        0.08488201, 0.22772569, 0.10318926, 0.35961337, 0.09991553,\n",
       "        0.23161507, 0.22382248, 0.25171464, 0.11769228, 0.27163011,\n",
       "        0.25458279, 0.17687852, 0.10496956, 0.21801489, 0.25031416,\n",
       "        0.32874368, 0.26558588, 0.08129731, 0.29518229, 0.3083903 ,\n",
       "        0.19124356, 0.34918581, 0.41063433, 0.06215069, 0.31757292,\n",
       "        0.33163698, 0.03762187, 0.31031399, 0.34071943, 0.19287685,\n",
       "        0.33532915, 0.31380918, 0.1697989 , 0.22732075, 0.29787699,\n",
       "        0.32912846, 0.15792327, 0.21118233, 0.21350892, 0.22241639,\n",
       "        0.11547422, 0.05577037, 0.10000808, 0.35060255, 0.30461665,\n",
       "        0.29876333, 0.23253609, 0.09082064, 0.37399726, 0.29211393,\n",
       "        0.32175872, 0.11863284, 0.06679572, 0.30880294, 0.12850069,\n",
       "        0.29722596, 0.28173738, 0.15121545, 0.33989308, 0.26039259,\n",
       "        0.13841775, 0.11638528, 0.31646729, 0.20543308, 0.0606874 ,\n",
       "        0.33128646, 0.11979685, 0.13294462, 0.36282477, 0.28999923,\n",
       "        0.32589971, 0.06521432, 0.13692844, 0.27096048, 0.12954244,\n",
       "        0.13973963, 0.40505881, 0.129475  , 0.39034781, 0.34510995,\n",
       "        0.05405157, 0.37560574, 0.30596479, 0.12966209, 0.23311096,\n",
       "        0.09268321, 0.08018514, 0.33618983, 0.11500321, 0.26867754,\n",
       "        0.29565119, 0.22065209, 0.09507294, 0.30539341, 0.10421402,\n",
       "        0.36468635, 0.14827436, 0.09350686, 0.28028619, 0.10477338,\n",
       "        0.13724941, 0.23538015, 0.2179381 , 0.08547546, 0.11331056,\n",
       "        0.09642241, 0.18751946, 0.11125715, 0.35396704, 0.09743201,\n",
       "        0.14455487, 0.25775888, 0.1301869 , 0.07843649, 0.09461884,\n",
       "        0.30920818, 0.25218699, 0.12079966, 0.27522968, 0.28657483,\n",
       "        0.26588878, 0.24500031, 0.26105052, 0.12707723, 0.13457008,\n",
       "        0.19615517, 0.35562748, 0.40324797, 0.47788974, 0.33881904,\n",
       "        0.29291296, 0.18331399, 0.32919488, 0.45354942, 0.41179798,\n",
       "        0.43224337, 0.32829665, 0.30741818, 0.4183031 , 0.19507795,\n",
       "        0.37669102, 0.17797035, 0.37248224]),\n",
       " array([0.08333857, 0.09840917, 0.17589072, 0.35967692, 0.34888936,\n",
       "        0.37484541, 0.32744832, 0.261626  , 0.17358861, 0.31263453,\n",
       "        0.39322794, 0.22808442, 0.29921437, 0.20327688, 0.30241664,\n",
       "        0.08186588, 0.2154609 , 0.07224258, 0.3941125 , 0.32401408,\n",
       "        0.3622115 , 0.40634073, 0.35373616, 0.19645687, 0.28894554,\n",
       "        0.20297992, 0.3165693 , 0.09296175, 0.14631536, 0.47003074,\n",
       "        0.33661945, 0.09021971, 0.06459254, 0.12259982, 0.32636911,\n",
       "        0.36824566, 0.19862078, 0.16738708, 0.3142144 , 0.07832183,\n",
       "        0.33437882, 0.27678191, 0.32233011, 0.33061112, 0.28252086,\n",
       "        0.13304322, 0.38395687, 0.32463696, 0.22969371, 0.0007105 ,\n",
       "        0.30976367, 0.29072346, 0.13975569, 0.24513417, 0.48250369,\n",
       "        0.40093774, 0.25077889, 0.0430693 , 0.        , 0.04728514,\n",
       "        0.13565631, 0.02359625, 0.        , 0.1127826 , 0.24382471,\n",
       "        0.        , 0.21093747, 0.05602275, 0.12125545, 0.        ,\n",
       "        0.25454001, 0.08457678, 0.        , 0.        , 0.        ,\n",
       "        0.        , 0.05475325, 0.19288709, 0.        , 0.02556637,\n",
       "        0.        , 0.06232472, 0.        , 0.        , 0.02776019,\n",
       "        0.        , 0.24253858, 0.06581832, 0.06526462, 0.        ,\n",
       "        0.11070824, 0.11384615, 0.02104183, 0.27477982, 0.19444908,\n",
       "        0.1358921 , 0.0277215 , 0.07640348, 0.14123543, 0.11572188,\n",
       "        0.08090452, 0.08251917, 0.15574429, 0.17798606, 0.21876276,\n",
       "        0.15447791, 0.07450635, 0.13647873, 0.31000293, 0.0996818 ,\n",
       "        0.13965758, 0.08704367, 0.18057241, 0.04288377, 0.12319991,\n",
       "        0.07922953, 0.26033658, 0.11175013, 0.18623445, 0.15970335,\n",
       "        0.14407783, 0.07864625, 0.15695639, 0.1432493 , 0.24626092,\n",
       "        0.10826475, 0.01425521, 0.13651692, 0.15776665, 0.11341006,\n",
       "        0.28350293, 0.26568223, 0.        , 0.05103923, 0.24549469,\n",
       "        0.19726115, 0.        , 0.22168557, 0.17583228, 0.13020782,\n",
       "        0.23061505, 0.24182724, 0.12178278, 0.14152   , 0.22854942,\n",
       "        0.19113885, 0.08973334, 0.12821628, 0.16350927, 0.16106344,\n",
       "        0.10966673, 0.03354367, 0.08595292, 0.31561262, 0.23145814,\n",
       "        0.23801187, 0.15304097, 0.07155025, 0.2119051 , 0.2001825 ,\n",
       "        0.21638584, 0.10974718, 0.04333618, 0.26435451, 0.01538663,\n",
       "        0.25365208, 0.20911417, 0.13837289, 0.2458247 , 0.22872213,\n",
       "        0.12430217, 0.11298104, 0.24420302, 0.09923742, 0.01883367,\n",
       "        0.28962123, 0.09625987, 0.12236065, 0.28712553, 0.20848869,\n",
       "        0.26952371, 0.04716325, 0.12055223, 0.20581209, 0.11015951,\n",
       "        0.12958599, 0.29829189, 0.11002134, 0.32975845, 0.35849026,\n",
       "        0.029869  , 0.37413374, 0.32745437, 0.11626621, 0.16026421,\n",
       "        0.06708508, 0.0665495 , 0.23648097, 0.10162683, 0.24095887,\n",
       "        0.20958413, 0.13078236, 0.05581431, 0.21504143, 0.08797236,\n",
       "        0.21100205, 0.1344412 , 0.06688448, 0.19807386, 0.0996415 ,\n",
       "        0.10947087, 0.12867387, 0.12002892, 0.05053367, 0.07896968,\n",
       "        0.06665363, 0.15098027, 0.08476802, 0.25200007, 0.06355231,\n",
       "        0.1299367 , 0.22907567, 0.10803196, 0.06096678, 0.06403782,\n",
       "        0.15056984, 0.15830449, 0.10680043, 0.18142344, 0.25319763,\n",
       "        0.29045745, 0.19364664, 0.13336222, 0.11632273, 0.12351031,\n",
       "        0.07673467, 0.260651  , 0.37166775, 0.41626525, 0.31068333,\n",
       "        0.21769342, 0.1778291 , 0.34423203, 0.36945192, 0.37262912,\n",
       "        0.37530523, 0.23526813, 0.28667571, 0.35634556, 0.11372146,\n",
       "        0.35900548, 0.31993928, 0.1013254 , 0.38413305]),\n",
       " array([0.01663501, 0.02094183, 0.23154995, 0.25713636, 0.28016663,\n",
       "        0.39490866, 0.2817742 , 0.30965896, 0.09513755, 0.28963951,\n",
       "        0.30002233, 0.19709453, 0.26873808, 0.08383354, 0.34945979,\n",
       "        0.07304127, 0.19142453, 0.11208641, 0.33057402, 0.26591927,\n",
       "        0.2892839 , 0.3513115 , 0.35699591, 0.23129594, 0.24811022,\n",
       "        0.11548581, 0.28828853, 0.045818  , 0.0839218 , 0.44278111,\n",
       "        0.32031777, 0.11855595, 0.11261855, 0.28667571, 0.06958912,\n",
       "        0.31359676, 0.19434525, 0.21480131, 0.0816275 , 0.3213065 ,\n",
       "        0.13843218, 0.35364979, 0.33524623, 0.30176789, 0.27241732,\n",
       "        0.30551815, 0.04897485, 0.32439914, 0.3321613 , 0.27367001,\n",
       "        0.12292116, 0.30169887, 0.27456401, 0.17992804, 0.27603773,\n",
       "        0.40130744, 0.37659249, 0.24968516, 0.01325312, 0.        ,\n",
       "        0.108661  , 0.22700497, 0.        , 0.        , 0.02297113,\n",
       "        0.28771365, 0.06404268, 0.25199191, 0.14518468, 0.05590452,\n",
       "        0.        , 0.23567054, 0.04311693, 0.        , 0.10303471,\n",
       "        0.        , 0.        , 0.        , 0.21089035, 0.        ,\n",
       "        0.10560067, 0.        , 0.13870386, 0.        , 0.        ,\n",
       "        0.09656501, 0.06404268, 0.26012857, 0.1075405 , 0.12705869,\n",
       "        0.        , 0.16414794, 0.05041518, 0.09297709, 0.30479587,\n",
       "        0.21879989, 0.15303899, 0.        , 0.14064353, 0.22636982,\n",
       "        0.14181184, 0.14629841, 0.03738837, 0.22325938, 0.23459094,\n",
       "        0.25348702, 0.20990216, 0.04247596, 0.0874676 , 0.35951594,\n",
       "        0.13534941, 0.18837928, 0.02980342, 0.22957419, 0.0993091 ,\n",
       "        0.17975338, 0.15034322, 0.26856336, 0.03408623, 0.2443382 ,\n",
       "        0.20977552, 0.15721048, 0.02454587, 0.19728768, 0.17237707,\n",
       "        0.27381406, 0.18877018, 0.08269347, 0.19863469, 0.23342777,\n",
       "        0.21097931, 0.29187998, 0.25690222, 0.        , 0.02622855,\n",
       "        0.27487449, 0.20713319, 0.10655963, 0.26354597, 0.21319533,\n",
       "        0.15044114, 0.2489438 , 0.27289332, 0.18564165, 0.20880299,\n",
       "        0.21729424, 0.25610359, 0.16317523, 0.19006186, 0.19260068,\n",
       "        0.18661668, 0.04766063, 0.00652334, 0.02800392, 0.37991227,\n",
       "        0.24107189, 0.26903646, 0.1743686 , 0.0633278 , 0.17914139,\n",
       "        0.21435025, 0.2272408 , 0.03671354, 0.03336433, 0.23583135,\n",
       "        0.0853864 , 0.2557248 , 0.22507336, 0.07411889, 0.29076616,\n",
       "        0.23286421, 0.08143653, 0.03747896, 0.22913039, 0.189357  ,\n",
       "        0.1377208 , 0.3096027 , 0.07816658, 0.08574452, 0.30023376,\n",
       "        0.24493979, 0.2690399 , 0.        , 0.07954819, 0.23315956,\n",
       "        0.0644199 , 0.08133503, 0.34517302, 0.07210396, 0.33683915,\n",
       "        0.29983891, 0.        , 0.35611069, 0.3201858 , 0.06384265,\n",
       "        0.22196387, 0.0155615 , 0.        , 0.2820697 , 0.0436306 ,\n",
       "        0.25066201, 0.23432587, 0.14138875, 0.01636065, 0.22543362,\n",
       "        0.0722258 , 0.25204271, 0.083545  , 0.04726922, 0.24911209,\n",
       "        0.00885675, 0.0530309 , 0.15935888, 0.17049984, 0.05484753,\n",
       "        0.01295223, 0.01636833, 0.18656487, 0.06614691, 0.2470253 ,\n",
       "        0.04027611, 0.08081346, 0.2735505 , 0.08281338, 0.01353443,\n",
       "        0.04738098, 0.17732114, 0.21535722, 0.0588177 , 0.21528142,\n",
       "        0.28400492, 0.27732078, 0.24028004, 0.14086384, 0.05828056,\n",
       "        0.06667096, 0.12567323, 0.25277504, 0.32009139, 0.36155432,\n",
       "        0.18762734, 0.29174726, 0.06853253, 0.28648814, 0.25114993,\n",
       "        0.3423679 , 0.3238766 , 0.27573791, 0.34452298, 0.17716385,\n",
       "        0.27391611, 0.30741818, 0.19198414, 0.2906004 ]),\n",
       " array([0.13328609, 0.14296222, 0.3171435 , 0.37271584, 0.32057372,\n",
       "        0.36192506, 0.38258145, 0.44201455, 0.1723024 , 0.36351717,\n",
       "        0.38065899, 0.28704811, 0.37192825, 0.1636956 , 0.12393057,\n",
       "        0.27683271, 0.07714494, 0.37839777, 0.28865183, 0.32962087,\n",
       "        0.42602983, 0.42600243, 0.31623634, 0.38760843, 0.24944732,\n",
       "        0.366322  , 0.14206768, 0.15552375, 0.4540163 , 0.39109909,\n",
       "        0.21682562, 0.18518036, 0.30241664, 0.13669558, 0.32982938,\n",
       "        0.30368595, 0.29961888, 0.15416289, 0.46201808, 0.25511169,\n",
       "        0.42394392, 0.38459685, 0.33640458, 0.3383364 , 0.39071935,\n",
       "        0.12810168, 0.38127934, 0.42386339, 0.34155059, 0.08623837,\n",
       "        0.35355098, 0.36400834, 0.25775872, 0.38530677, 0.39805228,\n",
       "        0.42792877, 0.3070824 , 0.14170442, 0.        , 0.08932969,\n",
       "        0.27694585, 0.10669255, 0.        , 0.1525921 , 0.35365306,\n",
       "        0.02972134, 0.3527271 , 0.2188821 , 0.15995821, 0.        ,\n",
       "        0.37467254, 0.15268981, 0.        , 0.03097606, 0.        ,\n",
       "        0.        , 0.1189423 , 0.31420678, 0.        , 0.0862266 ,\n",
       "        0.        , 0.05174468, 0.        , 0.        , 0.06380563,\n",
       "        0.02972134, 0.30015956, 0.09766477, 0.10730495, 0.        ,\n",
       "        0.24591253, 0.13754155, 0.09461902, 0.38804991, 0.23043662,\n",
       "        0.25048781, 0.09788746, 0.22973073, 0.32640871, 0.2228033 ,\n",
       "        0.24897795, 0.13741531, 0.34130083, 0.29263233, 0.33219524,\n",
       "        0.28093439, 0.1293659 , 0.14703947, 0.40353524, 0.10862509,\n",
       "        0.31099481, 0.13926006, 0.32372319, 0.08619728, 0.25019504,\n",
       "        0.24084049, 0.28691715, 0.14542648, 0.30227992, 0.30579925,\n",
       "        0.24818588, 0.13110546, 0.25625165, 0.26386467, 0.35820277,\n",
       "        0.25794127, 0.16467937, 0.26052108, 0.2917334 , 0.25038031,\n",
       "        0.40711302, 0.37865872, 0.        , 0.11959906, 0.38028961,\n",
       "        0.34606309, 0.02359699, 0.35604588, 0.29559723, 0.19677278,\n",
       "        0.35906921, 0.35535873, 0.26760873, 0.30837112, 0.35427193,\n",
       "        0.35349959, 0.2261215 , 0.25223396, 0.25937825, 0.26263193,\n",
       "        0.14669251, 0.13145847, 0.14255618, 0.3925824 , 0.33784854,\n",
       "        0.36233886, 0.29028551, 0.14747816, 0.25229207, 0.30300726,\n",
       "        0.32391754, 0.13768983, 0.1214378 , 0.34892829, 0.16070917,\n",
       "        0.3514407 , 0.32810945, 0.16189452, 0.38378978, 0.3063721 ,\n",
       "        0.16737748, 0.12506742, 0.33431981, 0.26877298, 0.07198521,\n",
       "        0.36917116, 0.12318756, 0.14809248, 0.33851238, 0.32447513,\n",
       "        0.37286619, 0.12782404, 0.14638065, 0.30989946, 0.1502063 ,\n",
       "        0.13448453, 0.40746915, 0.15026201, 0.44566604, 0.35163881,\n",
       "        0.12880943, 0.43139678, 0.32801746, 0.14053762, 0.27362716,\n",
       "        0.12211647, 0.12706896, 0.32120405, 0.1318593 , 0.31977806,\n",
       "        0.3454278 , 0.24111591, 0.13539189, 0.36919523, 0.14133101,\n",
       "        0.35447461, 0.148518  , 0.12089308, 0.30359441, 0.13054052,\n",
       "        0.13587098, 0.26697225, 0.25774734, 0.14090366, 0.13205261,\n",
       "        0.12565876, 0.27357465, 0.13256556, 0.341066  , 0.12613069,\n",
       "        0.14300199, 0.30776552, 0.13573735, 0.14679308, 0.11256383,\n",
       "        0.24947065, 0.29892856, 0.13463713, 0.26437957, 0.40252651,\n",
       "        0.29784131, 0.36810921, 0.27603165, 0.14580701, 0.1525724 ,\n",
       "        0.21825364, 0.39093317, 0.40608572, 0.41395301, 0.34379984,\n",
       "        0.37357835, 0.15997414, 0.35415108, 0.42084237, 0.35035543,\n",
       "        0.39359661, 0.3664782 , 0.34945979, 0.40797284, 0.25627519,\n",
       "        0.4190409 , 0.37910267, 0.25545188, 0.36033371]),\n",
       " array([6.29779643e-02, 7.37519167e-02, 2.73309366e-01, 3.83282479e-01,\n",
       "        3.01994500e-01, 4.44335388e-01, 2.80552892e-01, 3.23046059e-01,\n",
       "        1.25722832e-01, 3.35143958e-01, 3.39873298e-01, 2.45846292e-01,\n",
       "        2.61789514e-01, 1.37963463e-01, 3.29620874e-01, 8.07060500e-02,\n",
       "        2.39749028e-01, 1.19672106e-01, 3.84735057e-01, 3.88494751e-01,\n",
       "        4.16824038e-01, 3.62923262e-01, 2.01173046e-01, 2.62245991e-01,\n",
       "        1.88536208e-01, 3.00940902e-01, 9.24845000e-02, 8.59824656e-02,\n",
       "        5.02363359e-01, 3.41776098e-01, 9.69980417e-02, 1.39994250e-01,\n",
       "        3.62211500e-01, 1.13498408e-01, 3.53752574e-01, 4.19456701e-01,\n",
       "        2.60761988e-01, 1.36479833e-01, 3.07199637e-01, 1.80641568e-01,\n",
       "        3.55742319e-01, 2.86102025e-01, 3.40306732e-01, 3.77014502e-01,\n",
       "        2.83118495e-01, 1.12478059e-01, 3.73480634e-01, 3.34307574e-01,\n",
       "        2.89663702e-01, 1.01272583e-01, 2.99864591e-01, 3.64634292e-01,\n",
       "        1.88325333e-01, 3.01633625e-01, 4.12100642e-01, 4.11958522e-01,\n",
       "        2.88917107e-01, 3.85230394e-03, 0.00000000e+00, 1.18463550e-01,\n",
       "        1.45726520e-01, 2.58466667e-03, 0.00000000e+00, 4.79332167e-02,\n",
       "        3.30121767e-01, 7.26382500e-02, 2.29620427e-01, 1.25370667e-01,\n",
       "        9.00708268e-02, 0.00000000e+00, 1.79005825e-01, 6.40838801e-02,\n",
       "        0.00000000e+00, 8.06375833e-02, 0.00000000e+00, 0.00000000e+00,\n",
       "        3.71100000e-03, 1.95425084e-01, 0.00000000e+00, 9.57596667e-02,\n",
       "        0.00000000e+00, 8.87663899e-02, 0.00000000e+00, 0.00000000e+00,\n",
       "        8.09362948e-02, 7.26382500e-02, 2.53569973e-01, 1.15551874e-01,\n",
       "        1.20532624e-01, 0.00000000e+00, 1.44075068e-01, 8.84750041e-02,\n",
       "        8.15245000e-02, 2.89404743e-01, 1.71707917e-01, 1.96094448e-01,\n",
       "        3.28200000e-03, 1.47191025e-01, 2.28533053e-01, 1.10070417e-01,\n",
       "        1.44700406e-01, 7.37785833e-02, 2.41053762e-01, 2.16325980e-01,\n",
       "        2.39069843e-01, 2.00159703e-01, 6.52580196e-02, 1.27150422e-01,\n",
       "        3.72414174e-01, 1.10996685e-01, 2.10931083e-01, 5.12216667e-02,\n",
       "        2.31626833e-01, 8.94154059e-02, 1.96612558e-01, 1.40205369e-01,\n",
       "        2.96052336e-01, 8.15550905e-02, 2.27608425e-01, 1.94510042e-01,\n",
       "        1.47489125e-01, 7.26515167e-02, 1.59460892e-01, 1.32351795e-01,\n",
       "        2.70882737e-01, 1.89492062e-01, 9.48402500e-02, 2.05161271e-01,\n",
       "        2.52027625e-01, 1.63153438e-01, 2.81349700e-01, 2.98474664e-01,\n",
       "        0.00000000e+00, 4.73861744e-02, 2.56508348e-01, 1.76838660e-01,\n",
       "        8.43015000e-02, 2.51543610e-01, 2.31269674e-01, 1.71397360e-01,\n",
       "        2.81355641e-01, 2.96538523e-01, 1.52602510e-01, 1.80284700e-01,\n",
       "        2.09904765e-01, 2.19580355e-01, 1.56746592e-01, 1.87105375e-01,\n",
       "        1.95190875e-01, 2.06654096e-01, 6.03495000e-02, 1.62313955e-02,\n",
       "        7.26916667e-02, 3.64143066e-01, 2.71586180e-01, 2.99423565e-01,\n",
       "        1.95204966e-01, 7.09587500e-02, 2.72071244e-01, 2.24238000e-01,\n",
       "        2.69106941e-01, 7.95752917e-02, 3.09108000e-02, 2.83413188e-01,\n",
       "        8.31460417e-02, 2.87869553e-01, 2.35753947e-01, 1.00914663e-01,\n",
       "        2.71806459e-01, 2.44752785e-01, 1.22389000e-01, 9.55294940e-02,\n",
       "        2.50825621e-01, 1.56192292e-01, 9.51453333e-02, 3.26716393e-01,\n",
       "        9.73055833e-02, 1.22457451e-01, 3.12337167e-01, 2.62573544e-01,\n",
       "        2.17858457e-01, 7.09766667e-03, 1.23806562e-01, 2.40324844e-01,\n",
       "        7.52181652e-02, 1.28410709e-01, 3.11777788e-01, 1.04643160e-01,\n",
       "        3.53138208e-01, 3.09338099e-01, 1.08333333e-06, 3.34907444e-01,\n",
       "        3.02007920e-01, 1.18408012e-01, 2.22813611e-01, 5.33544167e-02,\n",
       "        9.01616667e-03, 3.05526930e-01, 8.53820000e-02, 2.78910165e-01,\n",
       "        2.28418542e-01, 1.70877133e-01, 2.06216602e-02, 2.61838762e-01,\n",
       "        8.71447389e-02, 2.70145875e-01, 1.17164789e-01, 6.93559184e-02,\n",
       "        2.46868675e-01, 3.75489167e-02, 9.83919954e-02, 1.71978487e-01,\n",
       "        1.94764042e-01, 5.14255096e-02, 3.86086574e-02, 5.01928833e-02,\n",
       "        1.51677771e-01, 9.34702824e-02, 2.73428375e-01, 6.85605369e-02,\n",
       "        1.30225017e-01, 3.30766884e-01, 1.08351708e-01, 2.01751212e-02,\n",
       "        6.10435443e-02, 2.11249000e-01, 2.07178306e-01, 9.93866000e-02,\n",
       "        2.44614791e-01, 2.67603933e-01, 2.64406329e-01, 2.10797053e-01,\n",
       "        2.16447315e-01, 8.73184680e-02, 6.98049935e-02, 1.22575792e-01,\n",
       "        2.13449833e-01, 3.30012978e-01, 3.89529656e-01, 3.53881858e-01,\n",
       "        3.43882679e-01, 1.47198448e-01, 3.28431545e-01, 3.29215234e-01,\n",
       "        3.49048663e-01, 3.50504300e-01, 3.05286162e-01, 2.89283898e-01,\n",
       "        3.75973011e-01, 2.26027941e-01, 3.21283434e-01, 3.54356245e-01,\n",
       "        1.86699348e-01, 3.65732363e-01]),\n",
       " array([0.0749552 , 0.07611467, 0.25480778, 0.28421978, 0.3602222 ,\n",
       "        0.27047611, 0.31389165, 0.1213855 , 0.31299782, 0.36406154,\n",
       "        0.18934954, 0.27789005, 0.13255873, 0.37271584, 0.0873366 ,\n",
       "        0.20154534, 0.10002358, 0.36936185, 0.26367586, 0.38328248,\n",
       "        0.42244765, 0.4007151 , 0.18082725, 0.27224153, 0.09062221,\n",
       "        0.28665608, 0.10300242, 0.08837737, 0.51229686, 0.37620839,\n",
       "        0.07554748, 0.07243067, 0.35967692, 0.11983529, 0.33164   ,\n",
       "        0.18719201, 0.23833107, 0.16669517, 0.35835172, 0.10068828,\n",
       "        0.37721346, 0.29009385, 0.3169715 , 0.29743286, 0.28787029,\n",
       "        0.10791422, 0.40320664, 0.35222519, 0.30070966, 0.07294129,\n",
       "        0.30375385, 0.28628554, 0.19117683, 0.22972865, 0.44452752,\n",
       "        0.42718424, 0.2685515 , 0.01147921, 0.        , 0.08378045,\n",
       "        0.16632915, 0.00602417, 0.        , 0.0599895 , 0.25232262,\n",
       "        0.02619758, 0.24128776, 0.06314604, 0.09121449, 0.        ,\n",
       "        0.23045381, 0.05907199, 0.        , 0.04988412, 0.        ,\n",
       "        0.        , 0.0166925 , 0.22111866, 0.        , 0.1148685 ,\n",
       "        0.        , 0.09823881, 0.        , 0.        , 0.07671707,\n",
       "        0.02619758, 0.20170637, 0.12081537, 0.12133995, 0.        ,\n",
       "        0.13510374, 0.08613157, 0.09405642, 0.31039651, 0.143048  ,\n",
       "        0.14889628, 0.00195683, 0.10699376, 0.23268607, 0.072339  ,\n",
       "        0.1296123 , 0.06819079, 0.24635323, 0.21846461, 0.24913698,\n",
       "        0.18358714, 0.07058938, 0.13077085, 0.35754672, 0.13222967,\n",
       "        0.16875529, 0.03960342, 0.26707362, 0.07705287, 0.16509172,\n",
       "        0.15291921, 0.22919977, 0.06518594, 0.23401461, 0.21576244,\n",
       "        0.12466217, 0.0750088 , 0.19401564, 0.14141947, 0.29152845,\n",
       "        0.16261332, 0.05425512, 0.18766704, 0.22512493, 0.15316633,\n",
       "        0.28389508, 0.34670915, 0.        , 0.04610451, 0.30812283,\n",
       "        0.21672539, 0.07615663, 0.28847563, 0.22225104, 0.14823716,\n",
       "        0.30417572, 0.32104762, 0.11323377, 0.20604097, 0.25397353,\n",
       "        0.23536461, 0.13417628, 0.15617061, 0.22202113, 0.18946726,\n",
       "        0.0607973 , 0.01249473, 0.07455692, 0.38409192, 0.30716867,\n",
       "        0.30255539, 0.16841778, 0.06728153, 0.24748087, 0.22105585,\n",
       "        0.2794695 , 0.0907219 , 0.03550683, 0.29625832, 0.05301671,\n",
       "        0.27008322, 0.22843619, 0.09291718, 0.30368747, 0.22785945,\n",
       "        0.1210992 , 0.09951835, 0.27524801, 0.16893013, 0.08860658,\n",
       "        0.2900511 , 0.09348242, 0.13505176, 0.29066771, 0.25829775,\n",
       "        0.27387794, 0.02214883, 0.12086896, 0.24042593, 0.06703834,\n",
       "        0.12634582, 0.30486744, 0.10511891, 0.37361975, 0.286511  ,\n",
       "        0.00340533, 0.39391045, 0.27322969, 0.11082999, 0.18860977,\n",
       "        0.04743567, 0.03139167, 0.31406308, 0.09180167, 0.26072364,\n",
       "        0.28307253, 0.14103683, 0.01569894, 0.25595523, 0.08473981,\n",
       "        0.28568047, 0.11362988, 0.0665857 , 0.26452767, 0.03750908,\n",
       "        0.08299598, 0.14259693, 0.15080785, 0.04428402, 0.02888397,\n",
       "        0.041698  , 0.15555504, 0.10243218, 0.29019371, 0.06290479,\n",
       "        0.12827074, 0.23329813, 0.09991283, 0.03473403, 0.06452045,\n",
       "        0.17727611, 0.19330683, 0.0946917 , 0.23422698, 0.31385251,\n",
       "        0.27890131, 0.2244129 , 0.14066915, 0.1011568 , 0.06282616,\n",
       "        0.08121075, 0.27735052, 0.35874352, 0.40252127, 0.31461786,\n",
       "        0.24045428, 0.14086418, 0.32268682, 0.29992534, 0.30607318,\n",
       "        0.33718516, 0.28398564, 0.25713636, 0.42147347, 0.16980995,\n",
       "        0.37160884, 0.33338224, 0.1364988 , 0.37596058]),\n",
       " array([0.08716554, 0.10027723, 0.3265675 , 0.37721346, 0.35844773,\n",
       "        0.43996629, 0.37703929, 0.36221673, 0.1522575 , 0.43648827,\n",
       "        0.43703043, 0.28155769, 0.39801111, 0.18718108, 0.42394392,\n",
       "        0.08525606, 0.32120936, 0.11466499, 0.43208617, 0.35355421,\n",
       "        0.35574232, 0.46493929, 0.4525293 , 0.31789442, 0.40968897,\n",
       "        0.25089463, 0.36973814, 0.12110566, 0.14744527, 0.49330804,\n",
       "        0.41943662, 0.19786563, 0.15949244, 0.33437882, 0.12421547,\n",
       "        0.32091296, 0.31358907, 0.37010087, 0.15129593, 0.4279087 ,\n",
       "        0.23823115, 0.35876569, 0.40309458, 0.39193924, 0.4426261 ,\n",
       "        0.11784171, 0.33918127, 0.40710239, 0.34292364, 0.08107787,\n",
       "        0.36141049, 0.3846907 , 0.22885812, 0.33014635, 0.44636309,\n",
       "        0.50065931, 0.37926785, 0.08543298, 0.        , 0.11891462,\n",
       "        0.25305202, 0.05554492, 0.        , 0.10737023, 0.33410999,\n",
       "        0.04281602, 0.31992817, 0.20502778, 0.13115858, 0.        ,\n",
       "        0.29591114, 0.12611987, 0.        , 0.0694229 , 0.        ,\n",
       "        0.        , 0.04508183, 0.24593086, 0.        , 0.11123419,\n",
       "        0.        , 0.10196064, 0.        , 0.        , 0.09544246,\n",
       "        0.04281602, 0.28906886, 0.12265357, 0.13335818, 0.        ,\n",
       "        0.21083479, 0.11821753, 0.09899078, 0.3707202 , 0.16943396,\n",
       "        0.19457687, 0.03412466, 0.16750095, 0.24870508, 0.21012359,\n",
       "        0.18818506, 0.09699318, 0.28523498, 0.23392567, 0.36079276,\n",
       "        0.22573541, 0.10223691, 0.12646984, 0.40217965, 0.12845159,\n",
       "        0.2646447 , 0.1007369 , 0.32276375, 0.1030325 , 0.22741165,\n",
       "        0.19674667, 0.28021613, 0.07449583, 0.28547109, 0.25820694,\n",
       "        0.20696477, 0.10583337, 0.247233  , 0.28281927, 0.32672396,\n",
       "        0.22156942, 0.08554923, 0.26294924, 0.27273111, 0.23554682,\n",
       "        0.40352312, 0.37836323, 0.        , 0.05715664, 0.35123249,\n",
       "        0.3142622 , 0.08405408, 0.35355697, 0.25174288, 0.2097397 ,\n",
       "        0.33932556, 0.35436113, 0.22783933, 0.2309719 , 0.3009922 ,\n",
       "        0.29203172, 0.1828    , 0.23495591, 0.2320983 , 0.2368943 ,\n",
       "        0.11785458, 0.06728854, 0.09401632, 0.38613083, 0.29893465,\n",
       "        0.35574571, 0.24356265, 0.08216847, 0.29835169, 0.2999192 ,\n",
       "        0.32235323, 0.1139797 , 0.06626975, 0.33895123, 0.15664984,\n",
       "        0.35727245, 0.30663377, 0.15314577, 0.35291501, 0.27766839,\n",
       "        0.13370734, 0.11398505, 0.36722759, 0.23565177, 0.10262282,\n",
       "        0.359272  , 0.1212374 , 0.12535126, 0.36643105, 0.297378  ,\n",
       "        0.3336877 , 0.05771981, 0.13239163, 0.30302463, 0.10707626,\n",
       "        0.12622929, 0.38672235, 0.12617667, 0.4237121 , 0.34448721,\n",
       "        0.06442991, 0.39817866, 0.32228545, 0.1173411 , 0.26994443,\n",
       "        0.086269  , 0.07185452, 0.33392867, 0.11330609, 0.30370596,\n",
       "        0.28513908, 0.24134621, 0.1094271 , 0.31978679, 0.1174789 ,\n",
       "        0.34979337, 0.13697168, 0.0684949 , 0.30683694, 0.06754215,\n",
       "        0.11693515, 0.25703082, 0.24595979, 0.07835447, 0.089026  ,\n",
       "        0.08361332, 0.20570079, 0.09895239, 0.35305075, 0.07889823,\n",
       "        0.14323986, 0.27388476, 0.12456053, 0.09413419, 0.0666287 ,\n",
       "        0.2754713 , 0.27649352, 0.12015302, 0.2708921 , 0.32688812,\n",
       "        0.34666392, 0.2997701 , 0.25312691, 0.13179066, 0.11230225,\n",
       "        0.20305589, 0.35929065, 0.43663036, 0.43339368, 0.34634249,\n",
       "        0.30795716, 0.150743  , 0.40025963, 0.40560258, 0.37888732,\n",
       "        0.42777277, 0.36259138, 0.35364979, 0.47853348, 0.22441037,\n",
       "        0.41644121, 0.40250439, 0.24637345, 0.37267106]),\n",
       " array([0.05022334, 0.07226039, 0.28341434, 0.33718516, 0.31659528,\n",
       "        0.45570997, 0.39381791, 0.40125578, 0.16439814, 0.39707503,\n",
       "        0.41562715, 0.28686889, 0.44640549, 0.21920145, 0.39359661,\n",
       "        0.06616759, 0.36440526, 0.10468749, 0.46390782, 0.43614788,\n",
       "        0.3505043 , 0.40038167, 0.42852038, 0.32386123, 0.38747145,\n",
       "        0.24898564, 0.36538361, 0.0676534 , 0.18358342, 0.45244057,\n",
       "        0.40974026, 0.19271539, 0.15681882, 0.37530523, 0.09583402,\n",
       "        0.29769681, 0.30956324, 0.31630246, 0.14720953, 0.36794822,\n",
       "        0.19503901, 0.42777277, 0.3403407 , 0.42827444, 0.47482143,\n",
       "        0.42866715, 0.0986361 , 0.35418135, 0.36704505, 0.31556206,\n",
       "        0.1125088 , 0.38608317, 0.35419664, 0.23530695, 0.3683635 ,\n",
       "        0.44280444, 0.4942181 , 0.35215879, 0.04588111, 0.        ,\n",
       "        0.13230442, 0.24719303, 0.0104001 , 0.        , 0.09405007,\n",
       "        0.30694211, 0.08353058, 0.27839302, 0.14692663, 0.10118904,\n",
       "        0.        , 0.27664805, 0.07827766, 0.        , 0.09503346,\n",
       "        0.        , 0.        , 0.02317787, 0.25239315, 0.        ,\n",
       "        0.11352724, 0.        , 0.11276574, 0.        , 0.        ,\n",
       "        0.10935115, 0.08353058, 0.27794639, 0.10297666, 0.12316942,\n",
       "        0.        , 0.20991914, 0.08903809, 0.1105461 , 0.31928446,\n",
       "        0.17782508, 0.26437744, 0.02316022, 0.18474584, 0.22673669,\n",
       "        0.24233801, 0.19365413, 0.06848899, 0.24075096, 0.23230001,\n",
       "        0.35702002, 0.20562473, 0.0886735 , 0.10404406, 0.36191389,\n",
       "        0.13495553, 0.22369741, 0.08602616, 0.27901994, 0.11330692,\n",
       "        0.23670303, 0.21215611, 0.29335394, 0.07699917, 0.24528914,\n",
       "        0.24976396, 0.23919943, 0.06981863, 0.27132256, 0.33753719,\n",
       "        0.3109155 , 0.23216659, 0.12592661, 0.25799291, 0.24152159,\n",
       "        0.21708121, 0.36240272, 0.32627301, 0.05528189, 0.29947472,\n",
       "        0.29472099, 0.10704586, 0.27658801, 0.25641967, 0.20233293,\n",
       "        0.31015544, 0.3158579 , 0.18718459, 0.22468611, 0.30247335,\n",
       "        0.30870966, 0.2000028 , 0.22608022, 0.25147664, 0.22447944,\n",
       "        0.11080703, 0.03914822, 0.06764946, 0.33409366, 0.26438954,\n",
       "        0.30373076, 0.19913268, 0.05105591, 0.2741867 , 0.28940874,\n",
       "        0.33381581, 0.07955229, 0.03507441, 0.32253872, 0.12427094,\n",
       "        0.31869454, 0.27826439, 0.14164243, 0.31021531, 0.2865606 ,\n",
       "        0.10774197, 0.08581169, 0.34953496, 0.20577863, 0.10341125,\n",
       "        0.31801012, 0.0839996 , 0.09237089, 0.33801258, 0.27466138,\n",
       "        0.35421853, 0.01900243, 0.1025385 , 0.28817655, 0.10913874,\n",
       "        0.10717927, 0.39409397, 0.09954637, 0.34589468, 0.30919066,\n",
       "        0.03279423, 0.37575322, 0.30569657, 0.08379376, 0.24573454,\n",
       "        0.04639737, 0.03096665, 0.30867792, 0.0767358 , 0.27603305,\n",
       "        0.31536773, 0.22752374, 0.04686773, 0.27469289, 0.07982012,\n",
       "        0.28348185, 0.12929408, 0.03715939, 0.28245791, 0.06885651,\n",
       "        0.08680618, 0.22669374, 0.25009021, 0.05009395, 0.05588379,\n",
       "        0.05444525, 0.20328902, 0.06729874, 0.32986613, 0.04902925,\n",
       "        0.11399532, 0.27680349, 0.09980972, 0.04284607, 0.05836799,\n",
       "        0.26639755, 0.24436465, 0.08850288, 0.27474328, 0.30997379,\n",
       "        0.29229144, 0.26860113, 0.25128466, 0.10343783, 0.12102578,\n",
       "        0.18517052, 0.44550189, 0.47025827, 0.42522167, 0.31195393,\n",
       "        0.30577422, 0.1143471 , 0.44733671, 0.39778066, 0.41742844,\n",
       "        0.29930816, 0.3238766 , 0.4549999 , 0.18463091, 0.44649627,\n",
       "        0.43224337, 0.1958318 , 0.42098236]),\n",
       " array([0.11282627, 0.12555065, 0.38419931, 0.51229686, 0.40103046,\n",
       "        0.52643145, 0.39673104, 0.41587697, 0.17458573, 0.48887158,\n",
       "        0.5144547 , 0.39463765, 0.45333575, 0.2139431 , 0.4540163 ,\n",
       "        0.09553311, 0.39255125, 0.15077592, 0.50814248, 0.4373216 ,\n",
       "        0.50236336, 0.55360983, 0.51061401, 0.3581735 , 0.45887355,\n",
       "        0.39980129, 0.42343107, 0.12700686, 0.14320233, 0.51485573,\n",
       "        0.26209542, 0.29926963, 0.47003074, 0.13382136, 0.41568066,\n",
       "        0.45052641, 0.4460467 , 0.19880405, 0.43047266, 0.27793501,\n",
       "        0.49330804, 0.43182543, 0.45798493, 0.44881826, 0.44258062,\n",
       "        0.14370735, 0.49384736, 0.42604647, 0.40926305, 0.12372642,\n",
       "        0.47362827, 0.45470609, 0.28311   , 0.4004584 , 0.50840092,\n",
       "        0.51757   , 0.46612351, 0.08279064, 0.        , 0.12892653,\n",
       "        0.31961476, 0.07569149, 0.        , 0.13961851, 0.36102326,\n",
       "        0.08790619, 0.38725244, 0.26178377, 0.15935004, 0.        ,\n",
       "        0.36673528, 0.11844281, 0.        , 0.11250302, 0.        ,\n",
       "        0.        , 0.08607791, 0.3198624 , 0.        , 0.15618687,\n",
       "        0.        , 0.12897366, 0.        , 0.        , 0.12487385,\n",
       "        0.08790619, 0.33753145, 0.16337366, 0.17674755, 0.        ,\n",
       "        0.26788133, 0.12801586, 0.13124496, 0.37757856, 0.24756275,\n",
       "        0.23767859, 0.06882306, 0.23355734, 0.34478576, 0.30934759,\n",
       "        0.2466951 , 0.12041571, 0.36774245, 0.30434972, 0.42288336,\n",
       "        0.28347666, 0.08658846, 0.15438481, 0.44647027, 0.14190023,\n",
       "        0.35138943, 0.12951732, 0.38280531, 0.13055638, 0.29008437,\n",
       "        0.24881576, 0.31848834, 0.12367141, 0.31548037, 0.29075526,\n",
       "        0.28016958, 0.08504291, 0.32464049, 0.30421755, 0.37804878,\n",
       "        0.25726451, 0.17789978, 0.30401577, 0.34282092, 0.31428698,\n",
       "        0.38736919, 0.39910914, 0.        , 0.07692045, 0.35869109,\n",
       "        0.34143867, 0.12099667, 0.36822013, 0.32781213, 0.21406223,\n",
       "        0.41028442, 0.35962169, 0.28666593, 0.3025912 , 0.34558252,\n",
       "        0.34581859, 0.26608088, 0.28967164, 0.25824353, 0.35422614,\n",
       "        0.12588336, 0.07883878, 0.1228272 , 0.44234159, 0.38989607,\n",
       "        0.40178865, 0.2913292 , 0.10149256, 0.37173082, 0.36881302,\n",
       "        0.36966477, 0.12576392, 0.09166687, 0.36310643, 0.19337216,\n",
       "        0.38320543, 0.30023299, 0.14830196, 0.37831004, 0.35807655,\n",
       "        0.13728027, 0.11908963, 0.37868481, 0.32899747, 0.12762896,\n",
       "        0.39655187, 0.11367097, 0.13730593, 0.41142036, 0.35481187,\n",
       "        0.40488246, 0.10272479, 0.12172159, 0.34260792, 0.12836309,\n",
       "        0.14160388, 0.41955494, 0.12246564, 0.45000445, 0.36202755,\n",
       "        0.07378359, 0.42593244, 0.36713333, 0.14444586, 0.34046626,\n",
       "        0.10514898, 0.11559212, 0.38074995, 0.11566748, 0.35520245,\n",
       "        0.37725063, 0.27944516, 0.11092491, 0.41420309, 0.11489342,\n",
       "        0.37240874, 0.15006757, 0.11163272, 0.34498249, 0.11227489,\n",
       "        0.13862165, 0.28636576, 0.3498077 , 0.08984703, 0.11495623,\n",
       "        0.11054187, 0.26659012, 0.11600619, 0.3542093 , 0.1060859 ,\n",
       "        0.15448865, 0.36717182, 0.13041908, 0.09627537, 0.07684974,\n",
       "        0.31387075, 0.31129279, 0.12608942, 0.33745061, 0.39945036,\n",
       "        0.37684911, 0.35684813, 0.36744108, 0.15101457, 0.14981006,\n",
       "        0.30612961, 0.37781021, 0.49692178, 0.52649794, 0.51351942,\n",
       "        0.39516616, 0.20391912, 0.47896206, 0.5400077 , 0.48641878,\n",
       "        0.45244057, 0.43282135, 0.44278111, 0.46735369, 0.30929804,\n",
       "        0.50990339, 0.49412961, 0.31339081, 0.49034622]),\n",
       " array([0.08140905, 0.09328493, 0.28884277, 0.3602222 , 0.33343006,\n",
       "        0.36285082, 0.342413  , 0.17085733, 0.43379028, 0.46662345,\n",
       "        0.34559923, 0.41357597, 0.24206123, 0.36192506, 0.09597072,\n",
       "        0.33787091, 0.09604454, 0.45948164, 0.41054509, 0.44433539,\n",
       "        0.48121075, 0.43551173, 0.33424123, 0.42425193, 0.31614523,\n",
       "        0.40253964, 0.08373389, 0.18722083, 0.52643145, 0.41176204,\n",
       "        0.15906411, 0.1988161 , 0.37484541, 0.10626841, 0.31902091,\n",
       "        0.41427089, 0.33641714, 0.21347858, 0.3873636 , 0.18777657,\n",
       "        0.43996629, 0.36857734, 0.42632607, 0.47850697, 0.40624823,\n",
       "        0.11750567, 0.39163107, 0.39087464, 0.32891465, 0.05211477,\n",
       "        0.46389767, 0.44134632, 0.22222123, 0.33608505, 0.47821819,\n",
       "        0.49452532, 0.37853375, 0.0584573 , 0.        , 0.12695902,\n",
       "        0.24177692, 0.03568128, 0.        , 0.11024029, 0.34674236,\n",
       "        0.04860407, 0.29548772, 0.15761052, 0.14435914, 0.        ,\n",
       "        0.28375933, 0.10924786, 0.        , 0.08773973, 0.        ,\n",
       "        0.        , 0.04158599, 0.24148758, 0.        , 0.08618217,\n",
       "        0.        , 0.11712547, 0.        , 0.        , 0.07026802,\n",
       "        0.04860407, 0.30822641, 0.11045334, 0.10464019, 0.        ,\n",
       "        0.1827705 , 0.117562  , 0.07748413, 0.32123666, 0.19344139,\n",
       "        0.19812637, 0.02875759, 0.12598275, 0.23379581, 0.22713586,\n",
       "        0.17708873, 0.09935319, 0.23188924, 0.21007306, 0.38077718,\n",
       "        0.23784519, 0.09628965, 0.14256429, 0.4133504 , 0.11520941,\n",
       "        0.23610007, 0.10620007, 0.27028643, 0.08397611, 0.20847207,\n",
       "        0.16458781, 0.29958484, 0.09424238, 0.27017938, 0.2261276 ,\n",
       "        0.19198042, 0.08874695, 0.27341934, 0.29699874, 0.32755021,\n",
       "        0.19148454, 0.09837614, 0.228858  , 0.25973332, 0.24698457,\n",
       "        0.36711009, 0.32954755, 0.        , 0.05752809, 0.30978619,\n",
       "        0.275181  , 0.0914722 , 0.28476111, 0.25291874, 0.17814847,\n",
       "        0.32323128, 0.32793396, 0.18771033, 0.20070123, 0.26934543,\n",
       "        0.25992734, 0.21284559, 0.25334402, 0.215196  , 0.25939612,\n",
       "        0.12311876, 0.04417796, 0.09118473, 0.41109278, 0.28086608,\n",
       "        0.33101504, 0.18474416, 0.07135977, 0.28001748, 0.29648115,\n",
       "        0.29784735, 0.10119747, 0.05936068, 0.31870248, 0.10980981,\n",
       "        0.32062976, 0.26979926, 0.15877774, 0.31724259, 0.29555653,\n",
       "        0.132838  , 0.09213539, 0.34183201, 0.25321474, 0.12146427,\n",
       "        0.36379758, 0.115189  , 0.11277445, 0.33912379, 0.27668261,\n",
       "        0.36222146, 0.04395578, 0.11709915, 0.27287193, 0.13539934,\n",
       "        0.12499819, 0.38718451, 0.12575194, 0.37834315, 0.34150687,\n",
       "        0.04017862, 0.37645666, 0.34055056, 0.11416474, 0.29162425,\n",
       "        0.08486559, 0.05918675, 0.33308974, 0.09241978, 0.31857575,\n",
       "        0.30603968, 0.2038193 , 0.08541385, 0.3656134 , 0.10114709,\n",
       "        0.2936884 , 0.14271967, 0.08558586, 0.2976005 , 0.09305064,\n",
       "        0.12780664, 0.21522092, 0.26615428, 0.07355122, 0.09762638,\n",
       "        0.09413227, 0.18557589, 0.10610576, 0.29799253, 0.08822287,\n",
       "        0.12649447, 0.33568484, 0.13007051, 0.06738003, 0.07404976,\n",
       "        0.22173681, 0.22388215, 0.11172176, 0.25720212, 0.32503474,\n",
       "        0.32921243, 0.26289382, 0.29844591, 0.13075475, 0.15148992,\n",
       "        0.2084832 , 0.34051661, 0.5042796 , 0.43746384, 0.41323808,\n",
       "        0.33909817, 0.16509031, 0.41213703, 0.42937487, 0.49301788,\n",
       "        0.45570997, 0.3165963 , 0.39490866, 0.48240187, 0.25581911,\n",
       "        0.43123301, 0.41160158, 0.25061851, 0.4022426 ]),\n",
       " array([0.09137249, 0.11533951, 0.31783264, 0.44452752, 0.393971  ,\n",
       "        0.47821819, 0.40019991, 0.35539746, 0.16446124, 0.39048751,\n",
       "        0.46495027, 0.3098151 , 0.41490406, 0.20080404, 0.39805228,\n",
       "        0.08938056, 0.33790208, 0.10725069, 0.46258187, 0.41703796,\n",
       "        0.41210064, 0.46554981, 0.46363876, 0.34319013, 0.40833658,\n",
       "        0.3448715 , 0.40102766, 0.11874514, 0.15668423, 0.50840092,\n",
       "        0.43218678, 0.21493685, 0.20612301, 0.48250369, 0.12076988,\n",
       "        0.37936222, 0.40078446, 0.36376482, 0.17693774, 0.3707582 ,\n",
       "        0.26159957, 0.44636309, 0.38587753, 0.42537674, 0.43345564,\n",
       "        0.40549055, 0.13000675, 0.43222165, 0.40145869, 0.37370988,\n",
       "        0.08509766, 0.41428678, 0.3882462 , 0.2657999 , 0.3369616 ,\n",
       "        0.48777154, 0.38726226, 0.07203018, 0.        , 0.11436765,\n",
       "        0.29301355, 0.05866787, 0.        , 0.1438378 , 0.33280356,\n",
       "        0.06683999, 0.34233487, 0.19702614, 0.13857665, 0.        ,\n",
       "        0.33685601, 0.10479402, 0.        , 0.11591124, 0.        ,\n",
       "        0.        , 0.07097643, 0.30388542, 0.        , 0.10991051,\n",
       "        0.        , 0.12485872, 0.        , 0.        , 0.09197128,\n",
       "        0.06683999, 0.3155515 , 0.0886097 , 0.11846282, 0.        ,\n",
       "        0.24030743, 0.1135836 , 0.1070673 , 0.33739688, 0.22696558,\n",
       "        0.23760125, 0.05571662, 0.20350132, 0.24107619, 0.29688797,\n",
       "        0.20941366, 0.09314495, 0.27969434, 0.27628037, 0.34565425,\n",
       "        0.23153594, 0.0904169 , 0.13938711, 0.41723195, 0.13285974,\n",
       "        0.27430399, 0.104409  , 0.29248608, 0.11975701, 0.25833582,\n",
       "        0.19984309, 0.32850932, 0.11302657, 0.28476547, 0.27198761,\n",
       "        0.25767333, 0.08439367, 0.27482506, 0.30665333, 0.33917622,\n",
       "        0.22432063, 0.13692638, 0.26714035, 0.3229673 , 0.27584063,\n",
       "        0.37519402, 0.35571729, 0.        , 0.06127242, 0.31877757,\n",
       "        0.31220804, 0.11946387, 0.32219894, 0.2621398 , 0.19206364,\n",
       "        0.31950972, 0.33493596, 0.23778257, 0.2743919 , 0.33610109,\n",
       "        0.32364133, 0.25287336, 0.28409473, 0.23092053, 0.27402699,\n",
       "        0.11607277, 0.07019654, 0.10141216, 0.44103801, 0.3260103 ,\n",
       "        0.33796847, 0.25953784, 0.08477517, 0.32128955, 0.34039267,\n",
       "        0.33050153, 0.11514494, 0.07359858, 0.31725202, 0.13958833,\n",
       "        0.33128322, 0.29398252, 0.14168139, 0.33437305, 0.30446749,\n",
       "        0.1233492 , 0.10629994, 0.35910803, 0.28428812, 0.13388989,\n",
       "        0.37163759, 0.09514103, 0.12546863, 0.33476946, 0.30805579,\n",
       "        0.38523651, 0.08636517, 0.11879842, 0.31646411, 0.11451586,\n",
       "        0.12842019, 0.38527709, 0.11259175, 0.38480364, 0.34456831,\n",
       "        0.06325871, 0.40352065, 0.35551914, 0.11602249, 0.31651201,\n",
       "        0.07822289, 0.09998992, 0.33519003, 0.10643152, 0.30084308,\n",
       "        0.34266486, 0.24078314, 0.08677329, 0.32419912, 0.09219177,\n",
       "        0.29888177, 0.13752103, 0.07315541, 0.31622994, 0.10306892,\n",
       "        0.10983832, 0.24180017, 0.27772093, 0.07212561, 0.0812085 ,\n",
       "        0.07796751, 0.23972728, 0.10018252, 0.32975772, 0.08581401,\n",
       "        0.1287831 , 0.32962393, 0.10988717, 0.08388409, 0.06765876,\n",
       "        0.28379189, 0.28849048, 0.1040758 , 0.29411626, 0.34460975,\n",
       "        0.34446968, 0.3302989 , 0.2594637 , 0.13512613, 0.13622004,\n",
       "        0.23219756, 0.35338074, 0.50619549, 0.49721073, 0.38075924,\n",
       "        0.29648949, 0.17360525, 0.43406669, 0.40619038, 0.47519203,\n",
       "        0.44280444, 0.35642848, 0.40130744, 0.4552163 , 0.21123428,\n",
       "        0.47052006, 0.43273965, 0.30600649, 0.45322817]),\n",
       " array([0.08679132, 0.08487094, 0.2636114 , 0.30607318, 0.32763088,\n",
       "        0.49301788, 0.36269976, 0.33439693, 0.16029889, 0.4199538 ,\n",
       "        0.43442167, 0.3189954 , 0.38699429, 0.22560601, 0.35035543,\n",
       "        0.09619994, 0.2678963 , 0.12178339, 0.44656624, 0.39810061,\n",
       "        0.34904866, 0.44741185, 0.3776529 , 0.30820676, 0.37719466,\n",
       "        0.27330988, 0.42777978, 0.07725485, 0.1699034 , 0.48641878,\n",
       "        0.38319782, 0.14309136, 0.14457928, 0.37262912, 0.10947071,\n",
       "        0.32419298, 0.3214901 , 0.28918423, 0.1998978 , 0.37031456,\n",
       "        0.13681863, 0.37888732, 0.33060437, 0.37033804, 0.43444618,\n",
       "        0.38018174, 0.11100591, 0.35783374, 0.36738299, 0.30425501,\n",
       "        0.09594155, 0.51989181, 0.43675928, 0.17870111, 0.37273406,\n",
       "        0.47519203, 0.43029526, 0.33884006, 0.0546855 , 0.        ,\n",
       "        0.10388976, 0.23222371, 0.02790764, 0.        , 0.11273097,\n",
       "        0.30016407, 0.02781828, 0.23466853, 0.15732286, 0.1330656 ,\n",
       "        0.        , 0.2748699 , 0.10517783, 0.        , 0.04833369,\n",
       "        0.        , 0.        , 0.05120595, 0.22635457, 0.        ,\n",
       "        0.09270467, 0.        , 0.07195101, 0.        , 0.        ,\n",
       "        0.04969467, 0.02781828, 0.27868111, 0.11153152, 0.09969714,\n",
       "        0.        , 0.16648751, 0.11260297, 0.05493109, 0.343518  ,\n",
       "        0.15719895, 0.18215576, 0.02180564, 0.13306661, 0.22432736,\n",
       "        0.17379087, 0.15360786, 0.0988518 , 0.2032589 , 0.20488543,\n",
       "        0.36813041, 0.20937836, 0.06719516, 0.13471921, 0.3763236 ,\n",
       "        0.08890516, 0.19668495, 0.09893161, 0.28051992, 0.07664835,\n",
       "        0.16149558, 0.16170875, 0.22506967, 0.09542373, 0.22937186,\n",
       "        0.20573098, 0.21193063, 0.06521345, 0.24849508, 0.24249123,\n",
       "        0.30898776, 0.16703032, 0.07169845, 0.21060819, 0.20305287,\n",
       "        0.18034434, 0.32368093, 0.33242736, 0.05205583, 0.27261746,\n",
       "        0.26790586, 0.07242619, 0.26160099, 0.24039259, 0.159677  ,\n",
       "        0.31194752, 0.2848378 , 0.21385313, 0.21641055, 0.29469854,\n",
       "        0.24963421, 0.16725392, 0.20327448, 0.18678526, 0.22845724,\n",
       "        0.11847313, 0.0320193 , 0.09426586, 0.35045885, 0.2345939 ,\n",
       "        0.32931321, 0.24102701, 0.06750376, 0.21199844, 0.27198942,\n",
       "        0.28096243, 0.1021731 , 0.05110252, 0.32325318, 0.07438001,\n",
       "        0.31182263, 0.24442896, 0.14355703, 0.30079204, 0.24974704,\n",
       "        0.13036256, 0.09263024, 0.30174472, 0.21411385, 0.07804383,\n",
       "        0.30941647, 0.10974563, 0.11395881, 0.34686826, 0.22916295,\n",
       "        0.3667093 , 0.05146684, 0.11188774, 0.27045703, 0.13140713,\n",
       "        0.1181442 , 0.40044529, 0.12323593, 0.36811267, 0.3228556 ,\n",
       "        0.02545597, 0.34295367, 0.28597596, 0.11850141, 0.22445391,\n",
       "        0.08442054, 0.06032005, 0.28290713, 0.09799151, 0.24605968,\n",
       "        0.27332813, 0.17345449, 0.08371281, 0.30714438, 0.09500612,\n",
       "        0.26413638, 0.13206098, 0.09739874, 0.23654714, 0.09574414,\n",
       "        0.12620585, 0.23585618, 0.25503845, 0.05181768, 0.10759526,\n",
       "        0.09084832, 0.16532119, 0.10534275, 0.26339768, 0.09078092,\n",
       "        0.12046463, 0.27744439, 0.11265318, 0.07329482, 0.07296675,\n",
       "        0.18919111, 0.19451101, 0.10257654, 0.22308589, 0.2805449 ,\n",
       "        0.26329424, 0.26692759, 0.24960606, 0.11130689, 0.15302242,\n",
       "        0.17293195, 0.3322038 , 0.44478819, 0.42034557, 0.38455926,\n",
       "        0.30393616, 0.18214369, 0.37951633, 0.40316196, 0.41742844,\n",
       "        0.27313828, 0.3423679 , 0.39574906, 0.19251914, 0.40503467,\n",
       "        0.41179798, 0.18138984, 0.41770827]),\n",
       " array([0.07599566, 0.08370044, 0.25778306, 0.35874352, 0.31695422,\n",
       "        0.5042796 , 0.39910267, 0.36415508, 0.16618492, 0.41755756,\n",
       "        0.42506981, 0.26995669, 0.42353621, 0.27468789, 0.40608572,\n",
       "        0.0934277 , 0.30919232, 0.08629164, 0.43874038, 0.35249473,\n",
       "        0.33001298, 0.43034565, 0.43238887, 0.28497986, 0.41592943,\n",
       "        0.2279648 , 0.35184616, 0.08506936, 0.18024127, 0.49692178,\n",
       "        0.39887592, 0.18281397, 0.11956581, 0.37166775, 0.11421895,\n",
       "        0.29183174, 0.30025093, 0.29329126, 0.21697817, 0.40295212,\n",
       "        0.18356712, 0.43663036, 0.3406838 , 0.41995747, 0.44435903,\n",
       "        0.41643108, 0.12089084, 0.382391  , 0.38878639, 0.31526815,\n",
       "        0.05314279, 0.3815825 , 0.39202221, 0.207655  , 0.32250466,\n",
       "        0.50619549, 0.50163957, 0.32893986, 0.05170381, 0.        ,\n",
       "        0.09379044, 0.20009812, 0.02922695, 0.        , 0.11450941,\n",
       "        0.33070355, 0.01900325, 0.27696991, 0.10899972, 0.14461982,\n",
       "        0.        , 0.26251004, 0.12377393, 0.        , 0.05166321,\n",
       "        0.        , 0.        , 0.04420175, 0.24262686, 0.        ,\n",
       "        0.08427563, 0.        , 0.09481353, 0.        , 0.        ,\n",
       "        0.06865898, 0.01900325, 0.26866376, 0.09116112, 0.10102046,\n",
       "        0.        , 0.18708699, 0.12458849, 0.06278658, 0.34699496,\n",
       "        0.16424748, 0.1966819 , 0.05604376, 0.15038512, 0.22242681,\n",
       "        0.19347172, 0.17748036, 0.0935423 , 0.24703404, 0.22954428,\n",
       "        0.38250852, 0.21642703, 0.08654401, 0.13593972, 0.39390547,\n",
       "        0.11310365, 0.2126678 , 0.09585915, 0.27068824, 0.07217484,\n",
       "        0.18805164, 0.2000787 , 0.26897688, 0.09759367, 0.25071116,\n",
       "        0.24335705, 0.20768198, 0.0939073 , 0.22546167, 0.25748532,\n",
       "        0.30548385, 0.2044671 , 0.08157163, 0.2080341 , 0.26969072,\n",
       "        0.20383959, 0.38253518, 0.33936726, 0.06960864, 0.30764874,\n",
       "        0.29952554, 0.076555  , 0.2947275 , 0.238899  , 0.1994658 ,\n",
       "        0.3057868 , 0.33278269, 0.15750295, 0.23992662, 0.32101317,\n",
       "        0.26614821, 0.18430138, 0.2099111 , 0.23077463, 0.20809095,\n",
       "        0.12151747, 0.04215545, 0.09797474, 0.37615985, 0.26616802,\n",
       "        0.32339293, 0.19200165, 0.07523883, 0.23425778, 0.27168619,\n",
       "        0.31694978, 0.10503496, 0.06455374, 0.33740303, 0.09058938,\n",
       "        0.31659102, 0.28820884, 0.17167756, 0.32266099, 0.24758049,\n",
       "        0.13201118, 0.10495751, 0.34366674, 0.20085244, 0.08421467,\n",
       "        0.33482518, 0.10993697, 0.11546889, 0.33653604, 0.26580812,\n",
       "        0.35364154, 0.04371655, 0.12125437, 0.26781249, 0.12127305,\n",
       "        0.13284301, 0.43640863, 0.12119849, 0.38447267, 0.32985662,\n",
       "        0.03240217, 0.38184063, 0.32101562, 0.13418309, 0.24656227,\n",
       "        0.07137652, 0.07579167, 0.31292297, 0.10029172, 0.29019171,\n",
       "        0.30496147, 0.18159059, 0.07362311, 0.30832619, 0.09776592,\n",
       "        0.28758114, 0.13891334, 0.07857807, 0.2632454 , 0.0945614 ,\n",
       "        0.11918577, 0.18363799, 0.22366222, 0.07657666, 0.08453777,\n",
       "        0.08116862, 0.1924314 , 0.11449206, 0.32480638, 0.09777442,\n",
       "        0.13292779, 0.24348756, 0.11956942, 0.06660363, 0.06879255,\n",
       "        0.22215547, 0.21492976, 0.11279709, 0.24884521, 0.31741822,\n",
       "        0.28142124, 0.2914981 , 0.23291799, 0.12848379, 0.13840284,\n",
       "        0.17569324, 0.38629019, 0.43880068, 0.30637347, 0.29932325,\n",
       "        0.14477929, 0.41909793, 0.4011571 , 0.44478819, 0.47025827,\n",
       "        0.30822782, 0.32009139, 0.48974564, 0.21906374, 0.42869507,\n",
       "        0.40324797, 0.22194551, 0.37357594]),\n",
       " array([0.09239526, 0.1221406 , 0.28952215, 0.36936185, 0.34542   ,\n",
       "        0.45948164, 0.35493446, 0.37682546, 0.16652338, 0.37941435,\n",
       "        0.48778502, 0.33540221, 0.3848068 , 0.23877415, 0.37839777,\n",
       "        0.0905291 , 0.31232495, 0.10149687, 0.38162807, 0.38473506,\n",
       "        0.44951283, 0.47780351, 0.3258384 , 0.41029365, 0.29178468,\n",
       "        0.37546774, 0.11260897, 0.15932634, 0.50814248, 0.40389169,\n",
       "        0.19864959, 0.17398551, 0.3941125 , 0.12224572, 0.34538103,\n",
       "        0.37043466, 0.35973756, 0.20019893, 0.39001752, 0.20292769,\n",
       "        0.43208617, 0.32236095, 0.41596894, 0.44344631, 0.36235069,\n",
       "        0.1516054 , 0.40517348, 0.39264494, 0.32972126, 0.06132093,\n",
       "        0.43736444, 0.37941243, 0.23644684, 0.33077304, 0.46258187,\n",
       "        0.48494548, 0.39185914, 0.06953197, 0.        , 0.12720754,\n",
       "        0.2151785 , 0.0644122 , 0.        , 0.1416865 , 0.32069502,\n",
       "        0.04261322, 0.29630457, 0.17413802, 0.14165453, 0.        ,\n",
       "        0.27332142, 0.10506452, 0.        , 0.06395706, 0.        ,\n",
       "        0.        , 0.06506123, 0.2639204 , 0.        , 0.11818198,\n",
       "        0.        , 0.08320276, 0.        , 0.        , 0.08440532,\n",
       "        0.04261322, 0.26604763, 0.11477802, 0.11233411, 0.        ,\n",
       "        0.24082741, 0.12540745, 0.08311932, 0.35273988, 0.17740874,\n",
       "        0.20329907, 0.05760057, 0.18297048, 0.24858307, 0.22624109,\n",
       "        0.18849155, 0.11126156, 0.25287724, 0.2483318 , 0.33230887,\n",
       "        0.23274736, 0.08880259, 0.14091288, 0.38139083, 0.12420792,\n",
       "        0.24263846, 0.11628835, 0.34027425, 0.10011099, 0.23144873,\n",
       "        0.2473714 , 0.26677167, 0.11877696, 0.24937237, 0.26677569,\n",
       "        0.2268348 , 0.0843837 , 0.25020415, 0.29047777, 0.31832867,\n",
       "        0.21189801, 0.11005866, 0.24297431, 0.25064824, 0.24758206,\n",
       "        0.36941197, 0.34915512, 0.        , 0.06741108, 0.32886078,\n",
       "        0.34050441, 0.07976734, 0.3298045 , 0.28000106, 0.18542835,\n",
       "        0.33002619, 0.33108   , 0.23767112, 0.26594455, 0.31327857,\n",
       "        0.29715183, 0.19213996, 0.22500982, 0.24271276, 0.26790977,\n",
       "        0.14108443, 0.07111184, 0.10524862, 0.35595598, 0.30271071,\n",
       "        0.32425605, 0.21825351, 0.09148957, 0.2920244 , 0.32060342,\n",
       "        0.32292428, 0.11003304, 0.07499673, 0.31979586, 0.12898752,\n",
       "        0.32176996, 0.29020484, 0.15902506, 0.34997107, 0.28200997,\n",
       "        0.1314675 , 0.11400802, 0.33366853, 0.22350055, 0.08319969,\n",
       "        0.34624334, 0.10742183, 0.12301148, 0.36644927, 0.32172848,\n",
       "        0.34663818, 0.08519813, 0.12129759, 0.29776841, 0.12172982,\n",
       "        0.14286005, 0.37391121, 0.11529482, 0.39074281, 0.30642116,\n",
       "        0.0650371 , 0.39198742, 0.30232347, 0.12078326, 0.24833922,\n",
       "        0.08724307, 0.09619563, 0.31448425, 0.10646743, 0.26224198,\n",
       "        0.31943531, 0.21889902, 0.09235396, 0.32305022, 0.0985969 ,\n",
       "        0.2951106 , 0.14755083, 0.09240215, 0.28511195, 0.12111253,\n",
       "        0.12407689, 0.20285045, 0.25319499, 0.08122609, 0.09958732,\n",
       "        0.10040203, 0.20551564, 0.09529145, 0.35222097, 0.09441399,\n",
       "        0.14302498, 0.28040096, 0.12274246, 0.08446698, 0.06708428,\n",
       "        0.25385083, 0.26744221, 0.12204313, 0.2783621 , 0.32348035,\n",
       "        0.29773911, 0.27338089, 0.28191921, 0.12823129, 0.1439784 ,\n",
       "        0.2384237 , 0.38270979, 0.43874038, 0.44326621, 0.38013718,\n",
       "        0.30423621, 0.1811154 , 0.39013208, 0.46282887, 0.44656624,\n",
       "        0.46390782, 0.34752149, 0.33057402, 0.42188911, 0.20762308,\n",
       "        0.43890697, 0.45867008, 0.2026331 , 0.42849119]),\n",
       " array([0.09930991, 0.12180879, 0.34191226, 0.42718424, 0.38641713,\n",
       "        0.49452532, 0.42897118, 0.4127719 , 0.17830987, 0.44292362,\n",
       "        0.46461341, 0.35424273, 0.44145199, 0.21915125, 0.42792877,\n",
       "        0.08942948, 0.36742028, 0.10918041, 0.48494548, 0.43624502,\n",
       "        0.41195852, 0.49992229, 0.48904136, 0.35740586, 0.44578106,\n",
       "        0.33704058, 0.39693006, 0.12090135, 0.18098432, 0.51757   ,\n",
       "        0.49118775, 0.22879213, 0.21976822, 0.40093774, 0.13255742,\n",
       "        0.35398763, 0.3751115 , 0.40681182, 0.18596713, 0.43326319,\n",
       "        0.2789951 , 0.50065931, 0.40839844, 0.43282041, 0.45109346,\n",
       "        0.43625731, 0.15995231, 0.40220686, 0.43904229, 0.37838975,\n",
       "        0.09483263, 0.4365286 , 0.4202737 , 0.26862831, 0.3582042 ,\n",
       "        0.48777154, 0.4124304 , 0.0840176 , 0.        , 0.14798394,\n",
       "        0.28818957, 0.08006411, 0.        , 0.14749516, 0.3743866 ,\n",
       "        0.05909989, 0.37979942, 0.21327338, 0.16174155, 0.        ,\n",
       "        0.31848345, 0.14209393, 0.        , 0.0782586 , 0.        ,\n",
       "        0.        , 0.08250887, 0.32545814, 0.        , 0.13295899,\n",
       "        0.        , 0.11727411, 0.        , 0.        , 0.10695992,\n",
       "        0.05909989, 0.28983402, 0.12659769, 0.13922193, 0.        ,\n",
       "        0.24648124, 0.13083156, 0.11689503, 0.37417758, 0.21975086,\n",
       "        0.26643497, 0.07430881, 0.23221146, 0.2973945 , 0.24837177,\n",
       "        0.25538087, 0.11861075, 0.32774824, 0.28911607, 0.41080108,\n",
       "        0.26532354, 0.08717055, 0.13860259, 0.44066264, 0.12520375,\n",
       "        0.30764463, 0.11551637, 0.36032671, 0.11257979, 0.27596997,\n",
       "        0.27055863, 0.31629505, 0.13751964, 0.31069631, 0.2853372 ,\n",
       "        0.28597507, 0.08384745, 0.272796  , 0.29561836, 0.34830393,\n",
       "        0.26315328, 0.15786156, 0.29047791, 0.3098615 , 0.27227621,\n",
       "        0.41387386, 0.36343442, 0.0829998 , 0.3365927 , 0.35147937,\n",
       "        0.09597032, 0.36469628, 0.30407716, 0.19268426, 0.38732927,\n",
       "        0.38849955, 0.25312189, 0.29282397, 0.35951887, 0.36437663,\n",
       "        0.23719639, 0.24585001, 0.23881248, 0.29372077, 0.14956571,\n",
       "        0.08747876, 0.11542648, 0.41004522, 0.34324273, 0.371314  ,\n",
       "        0.26108995, 0.11693263, 0.31233597, 0.33708909, 0.35462108,\n",
       "        0.12191448, 0.09887061, 0.36377787, 0.18099234, 0.35980504,\n",
       "        0.29984842, 0.1662573 , 0.3878848 , 0.31102086, 0.12982788,\n",
       "        0.12438582, 0.37196426, 0.2746796 , 0.09454629, 0.39944541,\n",
       "        0.09029632, 0.13158543, 0.36466794, 0.3259593 , 0.40444949,\n",
       "        0.09638509, 0.12222048, 0.31095696, 0.12706809, 0.14084334,\n",
       "        0.4435271 , 0.11550966, 0.43349661, 0.33180969, 0.08206527,\n",
       "        0.40708366, 0.33290541, 0.13033884, 0.28726469, 0.09716097,\n",
       "        0.09936205, 0.35745012, 0.11688193, 0.3209731 , 0.36597463,\n",
       "        0.27205868, 0.09476527, 0.35536463, 0.10693516, 0.34997762,\n",
       "        0.15233861, 0.08934334, 0.34877683, 0.13593343, 0.11835796,\n",
       "        0.25882857, 0.3058421 , 0.09276652, 0.09597997, 0.11093843,\n",
       "        0.2612629 , 0.10153832, 0.33032152, 0.08866605, 0.13955048,\n",
       "        0.34926292, 0.12680083, 0.09350606, 0.07475541, 0.28071986,\n",
       "        0.29284253, 0.13265568, 0.29951934, 0.36308025, 0.32446326,\n",
       "        0.32009457, 0.29593249, 0.14781182, 0.15473343, 0.23859323,\n",
       "        0.42339796, 0.50163957, 0.47180054, 0.39459441, 0.33002359,\n",
       "        0.17036344, 0.47439409, 0.45029073, 0.43029526, 0.4942181 ,\n",
       "        0.40208021, 0.37659249, 0.54659947, 0.21705303, 0.48195349,\n",
       "        0.46503462, 0.27461871, 0.46267301]),\n",
       " array([0.07638377, 0.10225732, 0.31151047, 0.40252127, 0.35869852,\n",
       "        0.43746384, 0.39797778, 0.35664588, 0.17703153, 0.37244349,\n",
       "        0.41522346, 0.267628  , 0.34802016, 0.18821675, 0.41395301,\n",
       "        0.09086593, 0.27629506, 0.11338296, 0.44326621, 0.37597744,\n",
       "        0.38952966, 0.44525606, 0.47817158, 0.31058023, 0.37016017,\n",
       "        0.27296565, 0.38736101, 0.09148995, 0.13967314, 0.52649794,\n",
       "        0.43495265, 0.19149307, 0.14764446, 0.41626525, 0.12446801,\n",
       "        0.37765932, 0.363509  , 0.30171752, 0.15095287, 0.38028961,\n",
       "        0.19730697, 0.43339368, 0.37337784, 0.42086229, 0.38520969,\n",
       "        0.36164301, 0.1287898 , 0.40547683, 0.4053584 , 0.32157129,\n",
       "        0.08946583, 0.36236848, 0.37228214, 0.22156506, 0.34097344,\n",
       "        0.49721073, 0.47180054, 0.3459351 , 0.07276489, 0.        ,\n",
       "        0.11081739, 0.24364649, 0.048497  , 0.        , 0.10413358,\n",
       "        0.33063321, 0.05694442, 0.29888103, 0.15544084, 0.12187071,\n",
       "        0.        , 0.33071598, 0.10719757, 0.        , 0.09072788,\n",
       "        0.        , 0.        , 0.04708713, 0.27451022, 0.        ,\n",
       "        0.09680475, 0.        , 0.10969046, 0.        , 0.        ,\n",
       "        0.095528  , 0.05694442, 0.37906664, 0.0987795 , 0.11066535,\n",
       "        0.        , 0.20198186, 0.11902089, 0.08306704, 0.33094117,\n",
       "        0.21812318, 0.2171868 , 0.01892394, 0.28373682, 0.26652453,\n",
       "        0.24027258, 0.19082252, 0.08975761, 0.27096771, 0.23360266,\n",
       "        0.34178947, 0.25532589, 0.10330865, 0.14178123, 0.44037563,\n",
       "        0.13293828, 0.2359252 , 0.09509664, 0.34466955, 0.09460743,\n",
       "        0.22455904, 0.21080168, 0.28556343, 0.11671125, 0.2728748 ,\n",
       "        0.27940029, 0.2312807 , 0.0984198 , 0.26134725, 0.24892306,\n",
       "        0.32303734, 0.23043689, 0.12579897, 0.26124265, 0.26919705,\n",
       "        0.26169541, 0.36975747, 0.42773675, 0.08555124, 0.3117971 ,\n",
       "        0.30480786, 0.09962421, 0.30643479, 0.30181023, 0.20022941,\n",
       "        0.34960717, 0.33961798, 0.21015633, 0.23734981, 0.33391161,\n",
       "        0.29365446, 0.22666361, 0.25080917, 0.23292732, 0.23359178,\n",
       "        0.11822782, 0.05856607, 0.09820386, 0.40620094, 0.29826845,\n",
       "        0.35859516, 0.22899735, 0.10877201, 0.29788478, 0.30634628,\n",
       "        0.31456134, 0.11130986, 0.06656268, 0.3412219 , 0.11041772,\n",
       "        0.35723381, 0.26763721, 0.1439588 , 0.34387037, 0.31613119,\n",
       "        0.12281034, 0.11635493, 0.34179553, 0.24414351, 0.12026604,\n",
       "        0.37365903, 0.10180078, 0.12580036, 0.34264553, 0.29982363,\n",
       "        0.33426196, 0.04992607, 0.13427798, 0.28980549, 0.12083565,\n",
       "        0.1355506 , 0.44796628, 0.1148043 , 0.39726002, 0.36962741,\n",
       "        0.0526083 , 0.4029891 , 0.35115281, 0.11464831, 0.28704325,\n",
       "        0.08975735, 0.06242654, 0.31299756, 0.11079235, 0.2955966 ,\n",
       "        0.32707153, 0.21245055, 0.07568653, 0.31300812, 0.10081619,\n",
       "        0.32816024, 0.14638304, 0.07432306, 0.29096249, 0.09544398,\n",
       "        0.10909608, 0.23104338, 0.22615317, 0.09413322, 0.07995374,\n",
       "        0.075796  , 0.24254914, 0.0919142 , 0.32637104, 0.07104482,\n",
       "        0.13832294, 0.31869427, 0.11691398, 0.08102713, 0.06979764,\n",
       "        0.27093318, 0.26306388, 0.11577835, 0.26166033, 0.34425766,\n",
       "        0.33778895, 0.27133942, 0.23626402, 0.12168316, 0.12539998,\n",
       "        0.18712645, 0.32602619, 0.43880068, 0.36476918, 0.32447947,\n",
       "        0.15274953, 0.40487398, 0.40678841, 0.42034557, 0.42522167,\n",
       "        0.29984612, 0.36155432, 0.45910568, 0.1881208 , 0.4254022 ,\n",
       "        0.47788974, 0.24719308, 0.42366439]),\n",
       " array([0.09767094, 0.11150402, 0.34797583, 0.42147347, 0.33289482,\n",
       "        0.48240187, 0.43468177, 0.39205682, 0.14637576, 0.44086199,\n",
       "        0.41242983, 0.32246451, 0.44517886, 0.22152017, 0.40797284,\n",
       "        0.0924181 , 0.35576736, 0.12229907, 0.42188911, 0.38892751,\n",
       "        0.37597301, 0.46755933, 0.45296891, 0.33456652, 0.42070251,\n",
       "        0.31355581, 0.38967534, 0.10811473, 0.17373303, 0.46735369,\n",
       "        0.45368664, 0.22171916, 0.20139248, 0.35634556, 0.10823524,\n",
       "        0.32065618, 0.35158066, 0.39108761, 0.20089297, 0.42238159,\n",
       "        0.27989366, 0.47853348, 0.37011556, 0.42758227, 0.42924761,\n",
       "        0.44979635, 0.1196018 , 0.38672212, 0.41409588, 0.35593981,\n",
       "        0.08667284, 0.4105475 , 0.39032486, 0.2703039 , 0.33286244,\n",
       "        0.4552163 , 0.54659947, 0.39088331, 0.08679452, 0.        ,\n",
       "        0.14190076, 0.28864856, 0.0740898 , 0.        , 0.13863716,\n",
       "        0.36165645, 0.0645723 , 0.3899463 , 0.2061525 , 0.14406158,\n",
       "        0.        , 0.32898469, 0.13848931, 0.        , 0.0780977 ,\n",
       "        0.        , 0.        , 0.08670018, 0.28243407, 0.        ,\n",
       "        0.12286044, 0.        , 0.12015193, 0.        , 0.        ,\n",
       "        0.09564127, 0.0645723 , 0.30299318, 0.12043522, 0.13766981,\n",
       "        0.        , 0.21922964, 0.12167475, 0.11237609, 0.36047662,\n",
       "        0.21767099, 0.24939693, 0.05604847, 0.2345493 , 0.2905274 ,\n",
       "        0.24037655, 0.24478048, 0.13516152, 0.3174049 , 0.24586598,\n",
       "        0.39629092, 0.2760811 , 0.08503968, 0.12523303, 0.41987539,\n",
       "        0.13047558, 0.29618975, 0.10611844, 0.32857659, 0.10501201,\n",
       "        0.26594284, 0.23095608, 0.31784772, 0.1054306 , 0.3109394 ,\n",
       "        0.27969949, 0.25058104, 0.08950668, 0.28345759, 0.29806261,\n",
       "        0.33744214, 0.24202515, 0.16837845, 0.30157797, 0.29854164,\n",
       "        0.27732282, 0.4152536 , 0.37780363, 0.        , 0.09240832,\n",
       "        0.34728078, 0.32369015, 0.10041751, 0.35925661, 0.29614355,\n",
       "        0.19798803, 0.3809498 , 0.40178856, 0.272272  , 0.28110355,\n",
       "        0.32619584, 0.31183358, 0.22983333, 0.24588336, 0.25961262,\n",
       "        0.29057819, 0.13271552, 0.08884177, 0.11219402, 0.41396781,\n",
       "        0.32536243, 0.38292657, 0.25163476, 0.1070125 , 0.29520956,\n",
       "        0.31646495, 0.32310354, 0.11254584, 0.09054721, 0.34981098,\n",
       "        0.16732698, 0.37449003, 0.28331672, 0.16096726, 0.36172855,\n",
       "        0.30569988, 0.12099993, 0.10470551, 0.34310626, 0.27774698,\n",
       "        0.1073413 , 0.40077841, 0.09541113, 0.11718172, 0.35732076,\n",
       "        0.30004199, 0.40026056, 0.09356973, 0.11225501, 0.30070976,\n",
       "        0.11813066, 0.13086882, 0.41252525, 0.11463552, 0.41211811,\n",
       "        0.32456539, 0.08092292, 0.39530801, 0.33395148, 0.11985262,\n",
       "        0.28031132, 0.09131437, 0.09920248, 0.34293064, 0.10608885,\n",
       "        0.33560092, 0.34477697, 0.24378607, 0.09389598, 0.35145683,\n",
       "        0.11382859, 0.33200759, 0.13266658, 0.08556516, 0.30898673,\n",
       "        0.10171878, 0.10669921, 0.22481253, 0.28512645, 0.09499732,\n",
       "        0.09202777, 0.12086599, 0.22780632, 0.1040959 , 0.31459851,\n",
       "        0.08682653, 0.12472937, 0.329433  , 0.10066887, 0.09987829,\n",
       "        0.07661009, 0.2687504 , 0.28743734, 0.13886769, 0.27434015,\n",
       "        0.36490297, 0.3293308 , 0.30071654, 0.27842582, 0.13442608,\n",
       "        0.14104681, 0.22323403, 0.3996537 , 0.48974564, 0.45910568,\n",
       "        0.360095  , 0.31903584, 0.14921618, 0.4594838 , 0.41468802,\n",
       "        0.39574906, 0.4549999 , 0.36843254, 0.34452298, 0.21602947,\n",
       "        0.45771935, 0.4183031 , 0.26132735, 0.40996935])]"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e5367a60-cc79-476b-9965-73bff34a865b",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Expe_Pheno",
   "language": "python",
   "name": "expe_pheno"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
